################################
## Acoelomorpha Phylogenomics ##
################################

## This is a summary of the pipeline followed to generate the tree of the Xenacoelomorpha, based on transcriptome data.

## The taxon sampling is a mix of new (29) and already published (18) transcriptomes downloaded from the SRA.
## The downloaded transcriptomes are:

# DRR151142	Praesagittifera naikaiensis
# SRR2500940	Xenoturbella profunda
# SRR2681155	Meara stichopi
# SRR2681679	Convolutriloba macropyga
# SRR2682004	Nemertoderma westbladi
# SRR2682099	Sterreria sp.
# SRR2682154	Ascoparia sp
# SRR3105702	Childia submaculatum
# SRR3105703	Diopisthoporus gymnopharyngeus
# SRR3105704	Diopisthoporus longitubus
# SRR3105705	Eumecynostomum macrobursalium
# SRR5760179	Symsagittifera roscoffensis
# SRR6374833	Isodiametra pulchra
# SRR6375633	Paratomella rubra
# SRR8454219	Hofstenia miamia
# SRR8506641	Symsagittifera roscoffensis
# SRR8524599	Pseudaphanostoma variabilis
# SRR8617822	Neochildia fusca
# SRR8641368	Flagellophora sp.

## The new transcriptomes were generated in three sequencing batchs. The first batch of new samples was processed at SciLifeLab inmediately 
## after extraction:

# P15761_101	Archaphanostoma occulta     
# P15761_102	Isodiametra sp-18           
# P15761_110	Childia vivipara            
# P15761_117	Philactinoposthia rhammifera
# P15761_125	Haplopostia rubropunctata   
# P15761_133	Mecynostomum sp-14          
# P15761_141	Anaperus tvaerminnensis     
# P15761_149	Solenofilomorpha sp-2       
# P15761_157	Diopistohoporus sp-1        
# P15761_165	Kuma sp-5                   
# P15761_173	Sterreria sp 1              
# P15761_181	Sterreria sp 2              
# P15761_189	Solenofilomorpha sp-9       

## The other two were prepared by myself. Briefly, the RNA was extracted following the protocol of the Zymo MicroPrep RNA kit and the 
## libraries built with the TaKaRa SMARTer universal low input RNA kit. Then, the samples were sequencing at Macrogen:

# 19-228	Sterreria psammicola
# 19-375	Solenofilomorpha sp-2
# 19-380	Solenofilomorpha sp-9
# 20-005	Paramecynostomum diversicolor
# 20-022	Nadina sp-2
# 20-023	Notocelis gullmarensis
# 20-026	Haplogonaria minima
# 20-038	Philactinoposthia rhammifera
# 20-053	Archaphanostoma agile
# 20-063	Faerlea glomerata
# 20-073	Kuma sp-5
# 20-078	Aphanostoma virescens
# 20-082	Haploposthia lactomaculata
# 20-093	Haploposthia rubropunctata
# 20-115	Childia crassum
# 20-132	Philocelis karlingi

############################################################################################################################################
############################################################################################################################################

## List of software used

# ASTRAL-III 5.7.7
# BBMap 38.92
#     Dedupe
# BMGE 1.12
# BUSCO v.3.0.2
#     metazoa_odb9
# Clan_check 1.3
# CroCo v.1.1
#     BLAST+ v2.10.1
#     Kallisto v.0.46.2
# Goalign 0.3.5
# IQ-TREE 1.6.12
# IQ-TREE 2.1.3
# MAFFT v7.475
# OrthoFinder 2.4.1
# PAML 4.10
#     MCMCtree
# PhyloBayes MPI 1.8
# PhyloPyPruner 1.2.3
# PREQUAL v.1.02
# Rcorrector 1.0.4
# TransDecoder v.5.3.0
# TransPi v.1.1.0
#     EvidentialGene v2019.05.14
#     fastp v.0.20.1
#     rnaSPADES v.3.14.0
#     SOAPdenovo-Trans v.1.03
#     Trans-ABySS v.2.0.1
#     Trinity v.2.9.1
#     Velvet v.1.2.12/Oases v.0.2.09 
# Trinity v.2.9.1
#     Trimmomatic

## R packages:

# Dfoil
# evobiR
# genesortR
# MCMCtreeR 

############################################################################################################################################
############################################################################################################################################

## Assemblies preparation

## At first, the samples we had from SciLifeLab were not working very well, which makes us try a number of different approaches. We found three 
## different pipelines that could be used to get the best assembly:

# First, basic Trimmomatic cleaning and Trinity assembly

Trinity --seqType fq --max_memory 110G --CPU 10 --left READ_1 --right READ_2 --trimmomatic

# Second, TransPi (cleaning with Fastp; assembly with rnaSPAdes, SOAP, TransABySS, Trinity and Velvet; merging assemblies with 
# EvidentialGene)

nextflow run TransPi.nf --all --reads 'READ_[1,2].fastq.gz' --k 21,31,41 --maxReadLen 50 -profile conda --myConda

# Third, "FullPolished" (correction of sequencing errors with Rcorrector; cleaning with Trimmomatic and Prinseq; assembly with Trinity; 
# reduce redundancy with EvidentialGene)

perl ~/bin/rcorrector/run_rcorrector.pl -1 READ_1 -2 READ_2 -k 21 -od $outfolder -t 8

java -jar $TRIMMOMATIC_HOME/trimmomatic.jar PE READ_1 READ_2 -baseout $output_name \
          ILLUMINACLIP:/sw/bioinfo/trinity/2.9.1/rackham/trinity-plugins/Trimmomatic/adapters/TruSeq3-PE.fa:2:30:10 \
          SLIDINGWINDOW:4:5 LEADING:5 TRAILING:5 MINLEN:35

prinseq-lite -fastq READ_1 -fastq2 READ_2 -out_good 19-228_cor_P_good -out_bad 19-228_cor_P_bad -min_qual_mean 20 -ns_max_p 25 \
             -lc_method entropy -lc_threshold 50 -trim_qual_left 30 -trim_qual_right 30 -min_len 40

Trinity --seqType fq --max_memory 240G --CPU 20 --left READ_1 --right READ_2

nextflow run TransPi.nf --onlyEvi -profile conda --myConda

## After testing the three protocols in all the new transcriptomes, they were applied as:
## - All the SRA samples and 20-038 were assembled following (1)
## - All the SciLifeLab samples were assembled following (2)
## - All the Macrogen samples (but 20-038) were assembled following (3)

## Once the assemblies are complete we tested the transcriptome completeness using BUSCO 3 and the metazonan 9 database:

run_BUSCO.py -i ASSEMBLY -l $BUSCO_LINEAGE_SETS/metazoa_odb9 -o ASSEMBLY_output --long -m tran -c 4


## After any sequencing project, the contamination of samples sequenced in the same lane is a very real posibility. To address this 
## issue, we ran CroCo, which uses Blast searches and mapping of reads to detect transcripts that represent potential instances of 
## contamination:

/home/saabalde/bin/CroCo/src/CroCo_v1.1.sh --mode p --in ASSEMBLIES_directory --tool K --output-level 2 --threads 8 2>&1 | tee directory.log

## Once we have a clean dataset, we can start preparing the data for the phylogenomic analyses. The first step is to identify coding 
## regions in the transcriptome using TransDecoder. In general, the longer the protein the more reliable the inference shuld be. However, 
## if we set a sequence length too long that might imply the recovery of less orthogroups. Since we have data with poor completeness values,
## we need to find the balance between these two parameters. Hence, we identify the coding regions with minimum lengths of 100, 200, 250, 
## 300, 500, 600 and 750 amino acids and see what happens.

TransDecoder.LongOrfs -t ASSEMBLY -m 100 / 200 / 250 / 300 / 500 / 600 / 750
TransDecoder.Predict -t ASSEMBLY

## Only the search of coding regions of 100, 200, 250, 300, and 500 amino acids returned peptides for all the transcriptomes. The sample 
## Neochildia fusca (SRR8617822) failed to return  any protein when the minimum protein size is 700 aa. The sample Solenofilomorpha sp-9 
## (P15761_189) failed at 600 and 700 aa.

## After several attempts cleaning these datasets, counting the number of orthogroups, and inspecting some of the alignments, I decide to 
## continue with a minimum protein size of 300 amino acids because I think it offers the best balance between number of orthogroups and protein 
## size.

## I have seen in the tests that there are duplicated sequences and, I assume, a lot of fragmentation. The program Dedupe, contained in 
## BBMAP, finds duplicates and overlapping fragments

for i in *fasta; do dedupe.sh in=$i out=$i.dedupe.fasta findoverlap=t cluster=t minidentity=95 minoverlap=40 amino=t; done

## Run OrthoFinder over this set of proteins

python3 /home/saabalde/bin/OrthoFinder_source/orthofinder.py -f PROTEINS_directory -S diamond -M msa -A mafft -T raxml -t 4 -a 4

## OrthoFinder assigned 229299 genes (92.5% of total) to 15758 orthogroups. Fifty percent of all genes were in orthogroups with 27 or more 
## genes (G50 was 27) and were contained in the largest 1834 orthogroups (O50 was 1834). There were 2 orthogroups with all species present 
## and 0 of these consisted entirely of single-copy genes.

############################################################################################################################################
############################################################################################################################################

## Now that we have the orthogroups, it is a matter of filtering out potential paralogs, contaminants, gene sets that do not represent real
## orthogroups and so on. To do so, I will apply a series of filters that aim to recover a reliable gene set. Hopefully.
## I will start by selecting all orthogroups with at least four species present. I will do that manually, sorting the table produced by
## OrthoFinder, and copying the corresponding alignments and gene trees to a new directory: 7824 orthogroups.

mkdir -p 04-Phylogenomic_analyses/{00-Alignments,00-Gene_trees}
cd 04-Phylogenomic_analyses/

while IFS='' read -r LINE || [ -n "${LINE}" ]; do cp ../03-OrthoFinder_300aa_final/OrthoFinder/Results_Mar13/MultipleSequenceAlignments/${LINE}.fa ./00-Alignments/; done < 00-Orthogroups.Atleastfour.txt 
while IFS='' read -r LINE || [ -n "${LINE}" ]; do cp ../03-OrthoFinder_300aa_final/OrthoFinder/Results_Mar13/Gene_Trees/${LINE}_tree.txt ./00-Gene_trees/; done < 00-Orthogroups.Atleastfour.txt 

## The problem with all these orthogroups is that they are not single copy. It is necessary to prune all paralogs from these alignments. For
## that, I am going to apply PhyloPyPruner. Unfortunately, PhyloPyPruner requires a very specific format for the names of the sequences in
## the gene trees and the alignments, so we need to re-format them.

mkdir 01-MSA_phylopypruner
cp 00-Alignments/* 01-MSA_phylopypruner
~/Escritorio/software/PhyloPyPruner/orthofinder2phylopypruner Species.list 01-MSA_phylopypruner/

mkdir 01-PhyloPruPruner_input
cp 01-MSA_phylopypruner/* 01-PhyloPruPruner_input/
cp 00-Gene_trees/* 01-PhyloPruPruner_input/

for i in 01-PhyloPruPruner_input/*tree.txt
    do
	sed -i 's/19_228\_/19_228\./g' $i
    sed -i 's/19_375\_/19_375\./g' $i
    sed -i 's/19_380\_/19_380\./g' $i
    sed -i 's/20_005\_/20_005\./g' $i
    sed -i 's/20_022\_/20_022\./g' $i
    sed -i 's/20_023\_/20_023\./g' $i
    sed -i 's/20_026\_/20_026\./g' $i
    sed -i 's/20_038\_/20_038\./g' $i
    sed -i 's/20_053\_/20_053\./g' $i
    sed -i 's/20_063\_/20_063\./g' $i
    sed -i 's/20_073\_/20_073\./g' $i
    sed -i 's/20_078\_/20_078\./g' $i
    sed -i 's/20_082\_/20_082\./g' $i
    sed -i 's/20_093\_/20_093\./g' $i
    sed -i 's/20_115\_/20_115\./g' $i
    sed -i 's/20_132\_/20_132\./g' $i
    sed -i 's/DRR151142\_/DRR151142\./g' $i
    sed -i 's/P15761_101\_/P15761_101\./g' $i
    sed -i 's/P15761_102\_/P15761_102\./g' $i
    sed -i 's/P15761_110\_/P15761_110\./g' $i
    sed -i 's/P15761_117\_/P15761_117\./g' $i
    sed -i 's/P15761_125\_/P15761_125\./g' $i
    sed -i 's/P15761_133\_/P15761_133\./g' $i
    sed -i 's/P15761_141\_/P15761_141\./g' $i
    sed -i 's/P15761_149\_/P15761_149\./g' $i
    sed -i 's/P15761_157\_/P15761_157\./g' $i
    sed -i 's/P15761_165\_/P15761_165\./g' $i
    sed -i 's/P15761_173\_/P15761_173\./g' $i
    sed -i 's/P15761_181\_/P15761_181\./g' $i
    sed -i 's/P15761_189\_/P15761_189\./g' $i
    sed -i 's/SRR2500940\_/SRR2500940\./g' $i
    sed -i 's/SRR2681155\_/SRR2681155\./g' $i
    sed -i 's/SRR2681679\_/SRR2681679\./g' $i
    sed -i 's/SRR2682004\_/SRR2682004\./g' $i
    sed -i 's/SRR2682099\_/SRR2682099\./g' $i
    sed -i 's/SRR2682154\_/SRR2682154\./g' $i
    sed -i 's/SRR3105702\_/SRR3105702\./g' $i
    sed -i 's/SRR3105703\_/SRR3105703\./g' $i
    sed -i 's/SRR3105704\_/SRR3105704\./g' $i
    sed -i 's/SRR3105705\_/SRR3105705\./g' $i
    sed -i 's/SRR5760179\_/SRR5760179\./g' $i
    sed -i 's/SRR6374833\_/SRR6374833\./g' $i
    sed -i 's/SRR6375633\_/SRR6375633\./g' $i
    sed -i 's/SRR8454219\_/SRR8454219\./g' $i
    sed -i 's/SRR8506641\_/SRR8506641\./g' $i
    sed -i 's/SRR8524599\_/SRR8524599\./g' $i
    sed -i 's/SRR8617822\_/SRR8617822\./g' $i
    sed -i 's/SRR8641368\_/SRR8641368\./g' $i

    sed -i 's/\_OF\_/\.OF\@/g' $i
	
	mv -- "$i" "${i%_tree.txt}.tre"

done

## The parameters more important to consider are:
#  --prune: there are three methods in PhyloPyPruner to prune out paralogs. In this case I will use LS (Largest Subtree), which searches 
#           the tree, from the root to the tips, for subtrees that contain non-repetetive OTUs. The subtree which contains the highest 
#           number of sequences is the "largest subtree" and is retained as an ortholog.
#  --min-taxa: discard output alignments with fewer than X OTUs. In orthogroups ith only four taxa is very easy to have only three unique
#              sequences, which precludes gene tree inference with bootstrap support. Hence, I will select orthogroups containing at least 
#              five species.
#  --no-supermatrix: do not concatenate the output into a supermatrix. We will still clean these alignments, so we are not ready for
#                    a supermatrix, yet. Besides, this way PhyloPyPruner will be faster.
#  --outgroup: define the outgroup species to root the trees. If Xenoturbella missing, the method used is midpoint root.

mkdir 02-PhyloPyPruner
phylopypruner --dir 01-PhyloPruPruner_input/ --output 02-PhyloPyPruner --no-supermatrix --trim-lb 5 --min-support 60 --mask pdist \
              --outgroup SRR2500940_Xenoturbella_profunda --prune LS --min-taxa 5

## Paralogy prunning has strongly impacted the dataset: the number of orthogroups has gone from 7824 to 6033, I guess because it
## removed all genes with less than five sequences. The different stats concerning sequences per alignment have also been affected, but that 
## makes sense because now the maximum number of sequences per alignment is set to 48 (the number of species). The percentage of missing data has 
## gone up from 82.60% to 84.90%. Finally, 2781 branches have been removed after been deemed too long, just 1.38% of the total.

## I will make now a table with the number of genes per species...

cat 02-PhyloPyPruner_output/phylopypruner_output/output_alignments/* | grep '>' | sed 's/>//' | sed -E 's/@.+//g' | sort | uniq -c > 02-PhyloPyPruner_StatsPerSpecies.txt

## Now we have a working set of alignments. However, we need to edit them before we can proceed from here. I want to: 1) convert them to 
## normal fasta files (not aligned); 2) eliminate the stop codons, if there is any; 3) clean the headers, to leave only the species name; 
## and 4) to change all names that are not correct, as per the latest identification and taxonomic updates.

mkdir 03-PhyloPyPruner_clean
cp 02-PhyloPyPruner/phylopypruner_output/output_alignments/*fa 03-PhyloPyPruner_clean/
cd 03-PhyloPyPruner_clean/

for i in *fa
    do
	sed -E '/>/ s/\.OF\@.+//g' $i > ${i}.rename; mv ${i}.rename $i
    sed -i '/>/! s/\-//g' $i
    sed -i 's/\*//g' $i
	
	sed -i 's/19_228.Sterreria_psammicola/19_228.Sterreria_sp/g' $i
    sed -i 's/20_053.Archaphanostoma_agile/20_053.Baltalimania_agile/g' $i
    sed -i 's/P15761_101.Archaphanostoma_occulta/P15761_101.Baltalimania_occulta/g' $i
    sed -i 's/P15761_102.Isodiametra_sp18/P15761_102.Praeconvoluta_tigrina/g' $i
    sed -i 's/P15761_125.Haplopostia_rubropunctata/P15761_125.Anaperus_rubellus/g' $i
    sed -i 's/P15761_133.Mecynostomum_sp14/P15761_133.Praeaphanostoma_sp/g' $i
    sed -i 's/P15761_173.Sterreria_sp1/P15761_173.Sterreria_rubra/g' $i
    sed -i 's/P15761_181.Sterreria_sp2/P15761_181.Sterreria_lundini/g' $i
    sed -i 's/SRR6374833.Isodiametra_pulchra/SRR6374833.Aphanostoma_pulchra/g' $i
    sed -i 's/SRR8524599.Pseudaphanostoma_variabilis/SRR8524599.Baltalimania_agile/g' $i
	
	mv -- "$i" "${i%.fa}.fasta"

done

## This dataset contains species with more than one specimen. Thanks to this stats, I can now remove the duplicated individuals, leaving
## only one tip per species. 
## Later on, I will prepare to parallel datasets: with and without the species Notocelis gullmarensis. This species has proven to be a 
## problematic branch in the tree. Previous phylogentic attempts (not shown) have recovered Notocelis in different positions of the tree, 
## lowering the support of the nodes where it was positioned.

## The taxa we need to remove are:
#    - 20_038.Philactinoposthia_rhammifera
#    - 20_053.Baltalimania_agile
#    - P15761_149.Solenofilomorpha_sp2
#    - P15761_165.Kuma_sp5
#    - P15761_189.Solenofilomorpha_sp9
#    - SRR8506641.Symsagittifera_roscoffensis

cd ../
mkdir 04-NoDuplicates
cp 03-PhyloPyPruner_clean/* 04-NoDuplicates/

cd 04-NoDuplicates/
for i in *fasta
    do
	tr '\n' ' ' < $i | sed 's/\ >/\,>/g' | tr ',' '\n' | egrep -v '20_038|20_053|P15761_149|P15761_165|P15761_189|SRR8506641' | tr ' ' '\n' > ${i}.tmp
	mv ${i}.tmp ${i}
done

## It is likely that now some of these alignments have fewer than five sequences that we need to remove.

for i in *fasta
    do
	sequences=$( grep -c '>' $i )
	if [ $sequences -lt 5 ]; then
	    rm $i
	fi
done

## Count the number of genes per species after this filter.

cd ../
cat 04-NoDuplicates/*fasta | grep '>' | sort | uniq -c > 04-NoDuplicates_StatsPerSpecies.txt


## The problem of transcriptomes is that the assembly is not perfect, and sometimes you get erroneous contigs that can hamper the alignment.
## To avoid that, I will run Prequal, which pairwise compares the sequences of each fasta file, to find regions that do not seem to be
## homologous to the other sequences. These stretches will be removed or masked. However, I will only use it to find sequences that are 
## "generally" bad. I mean, I will use Prequal to remove sequences that seem completely out of place or if, at least, a high proportion of
## the sequences is deemed as "non homologous" to the other sequences.

mkdir 05-Prequal
cp 04-NoDuplicates/* 05-Prequal

cd 05-Prequal/
for i in *fasta; do echo $i; prequal $i > $i.log; done
rm *fasta

## Prequal has removed and masked those regions that do not seem to be homologous to the other proteins. Now there will be fasta files with
## too few sequences, or sequences that have a long masked region. I will remove all sequences that do not have at least 250 unmasked amino
## acids, and then all orthogroups with fewer than 5 sequences.
## Note: sequences shorter than a given length will be removed using this script: https://www.biostars.org/p/79202/

mkdir Clean_sequences
cp *filtered Clean_sequences/

cd Clean_sequences/
for i in *filtered
    do
	sed -i '/>/! s/X//g' $i	
done

for i in *filtered
    do
	perl /home/saabalde/Escritorio/Xenacoelomorpha/2021_07-Phylogenomics/removesmalls.pl 250 $i > $i.fasta
done
rm *filtered

for i in *fasta
    do
	seqs=$( grep -c '>' $i) 
	if [ $seqs -lt 5 ]; then
	    rm $i
	fi
done

ls *fasta | sed 's/.filtered.fasta//g' > fasta_files.txt

while IFS='' read -r LINE || [ -n "${LINE}" ]
    do
    cp ../../04-NoDuplicates/${LINE} ./${LINE}.filtered
done < ./fasta_files.txt 

for i in $( ls *filtered | sed 's/.filtered//g' )
    do
    grep '>' ${i}.filtered.fasta | sort > header_fasta; grep '>' ${i}.filtered | sort > header_filtered
    fgrep -x -f header_fasta  header_filtered > Similarities.txt
    sed -i 's/>//g' Similarities.txt
    
	while read sequence_id
        do
        bioawk -v var="${sequence_id}" -c fastx '$name ~ var {print ">"$name"\n"$seq}' $i.filtered >> $i.filtered.rename
    done < ./Similarities.txt
	
done
rm *fasta *filtered *txt

for i in *rename
    do
	mv -- "$i" "${i%.fasta.filtered.rename}.fasta.filtered"
done

## This step has removed 1748 orthogroups, from 5569 to 3821, more than a 30% of the fasta files. We can perform the alignments now, but for
## that we need to prepare two datasets: one with and one without Notocelis. The dataset with Notocelis will only include those orthogroups
## where that species is present.

cd ../../
mkdir 06-Clean_Prequal 06-Clean_Prequal_Notocelis

cp 05-Prequal/Clean_sequences/*filtered 06-Clean_Prequal/
cp 05-Prequal/Clean_sequences/*filtered 06-Clean_Prequal_Notocelis/

cd 06-Clean_Prequal/
for i in *filtered
    do
	tr '\n' ' ' < $i | sed 's/\ >/\,>/g' | tr ',' '\n' | grep -v 'Notocelis_gullmarensis' | tr ' ' '\n' > ${i}.tmp
	mv ${i}.tmp ${i}
done

for i in *filtered
    do
	seqs=$( grep -c '>' $i) 
	if [ $seqs -lt 5 ]; then
	    rm ${i}; rm ../06-Clean_Prequal_Notocelis/${i}
	fi
done

cd ../06-Clean_Prequal_Notocelis

## Count the number of genes per species after this filter.

cd ../
cat 06-Clean_Prequal/*filtered | grep '>' | sort | uniq -c > 06-Prequal_StatsPerSpecies.txt
cat 06-Clean_Prequal_Notocelis/*filtered | grep '>' | sort | uniq -c > 06-Prequal_Notocelis_StatsPerSpecies.txt

## With all files clean, it is time to align all sequences. I will use MAFFT for that, using the MAFFT L-INS-i algorithm because it is 
## supposed to be more accurate.

mkdir 07-MAFFT 07-MAFFT_Notocelis
cp 06-Clean_Prequal/*filtered 07-MAFFT/
cp 06-Clean_Prequal_Notocelis/*filtered 07-MAFFT_Notocelis/

cd 07-MAFFT/
for f in *filtered
    do
    mafft-linsi $f > $f.mafft
done
rm *filtered

cd ../07-MAFFT_Notocelis/
for f in *filtered
    do
    mafft-linsi $f > $f.mafft
done
rm *filtered

## Check some alignments randomly to make sure everything is ok.

## Now we need to clean the alignments from ambiguously aligned positions, very fast-evolving sites and stuff like that. The filtering 
## criteria is: remove all sequences with more than 66% gaps and columns with more 80% gaps or more (h 0.66:0.79). Ambiguously aligned sited
## will be detected with default parameters.

cd ../
mkdir 08-BMGE 08-BMGE_Notocelis
cp 07-MAFFT/*mafft 08-BMGE/
cp 07-MAFFT_Notocelis/*mafft 08-BMGE_Notocelis/

cd 08-BMGE/
for i in *mafft
    do
	java -jar /home/saabalde/Escritorio/software/BMGE-1.12/BMGE.jar -i $i -t AA -g 0.66:0.79 -of $i.fas > $i.log
done
rm *mafft

cd ../08-BMGE_Notocelis/
for i in *mafft
    do
	java -jar /home/saabalde/Escritorio/software/BMGE-1.12/BMGE.jar -i $i -t AA -g 0.66:0.79 -of $i.fas > $i.log
done
rm *mafft

## Check some alignments randomly to make sure everything is ok.

## We need to clean the alignments again. BMGE has removed sequences from the alignments, so we need to remove all those with fewer than 
## five species.

cd ../
mkdir 09-BMGE_clean 09-BMGE_Notocelis_clean
cp 08-BMGE/*fas 09-BMGE_clean/
cp 08-BMGE_Notocelis/*fas 09-BMGE_Notocelis_clean/

for i in 09-BMGE_*/*fas
    do
    sequences=$( grep -c '>' $i )
	if [ $sequences -lt 5 ]; then
	    rm $i
	fi
done

for i in 09-BMGE_Notocelis_clean/*fas
    do
	sequences=$( grep -c 'Notocelis' $i )
	if [ $sequences -lt 1 ]; then
	    rm $i
	fi
done

## A total of 3592 orthogroups were kept in the complete dataset, only 189 were removed. In the Notocelis dataset, only 22 orthogroups were
## removed, for a final total of 420 alignments. However, only 287 still contain Notocelis.

## Count the number of sequences per species again

cat 09-BMGE_clean/*fas | grep '>' | sed 's/>//' | sort | uniq -c > 09-BMGE_StatsPerSpecies.txt
cat 09-BMGE_Notocelis_clean/*fas | grep '>' | sed 's/>//' | sort | uniq -c > 09-BMGE_Notocelis_StatsPerSpecies.txt

## Another problem our data has is the species Faerlea glomerata. I suspect, based on previous BLAST searches, this transcriptome might be 
## contaminated. However, previous analyses have revealed that not all of genes are exogenous, but they are mixed. In order to remove the 
## contaminants, I am going to run a Clan test, and eliminate the genes where Faerlea is recovered among the Proporidae.
## To learn more about the Clan test, see: https://github.com/ChrisCreevey/clan_check

## The clans to be testes will be:
#  20_026.Haplogonaria_minima 20_063.Faerlea_glomerata 20_073.Kuma_sp5 20_082.Haploposthia_lactomaculata 20_093.Haploposthia_rubropunctata
#  20_063.Faerlea_glomerata P15761_101.Baltalimania_occulta P15761_102.Praeconvoluta_tigrina P15761_133.Praeaphanostoma_sp SRR6374833.Aphanostoma_pulchra SRR8524599.Baltalimania_agile

cd 09-BMGE_clean/

mkdir -p 00-Faerlea_contaminants/{0-alignments,1-trees,2-Clan_test,3-clean_genes,4-new_alignments}
for i in *fas
    do
	faerlea=$( grep -c 'Faerlea' $i )
	if [ $faerlea -gt 0 ]; then
	    cp $i 00-Faerlea_contaminants/0-alignments/
	fi
done

cd 00-Faerlea_contaminants/0-alignments/

for i in *fas
    do
	iqtree -s $i -m MFP -AICc -nt AUTO
done
rm *fas

cd ../
mv 0-alignments/*fas.* ./1-trees
cat 1-trees/*treefile 2-Clan_test/Trees_clan_check.phy

cd 2-Clan_test/
clan_check -f Trees_clan_check.phy -c Clans.txt

## I will two lists: 
#    - Faerlea.txt: genes where Faerlea is not recovered monophyletic within Proporidae or there is no enough data to test.
#    - Faerlea_not_Isodiametridae.txt: genes where Faerlea is not recovered with the Isodiametridae, but not those where there is not enough 
#                                      data to test.

ls ../0-alignments/*fas | sed 's/\.\.\/0-alignments\///g' > all_genes.txt
sed 's/^/NR==/' Faerlea.txt | awk -f - ./all_genes.txt > clean_genes.txt
sed 's/^/NR==/' Faerlea_not_Isodiametridae.txt | awk -f - ./all_genes.txt > contaminated_genes.txt

while IFS='' read -r LINE || [ -n "${LINE}" ]
    do
	cp ../0-alignments/${LINE} ../3-clean_genes/
done < clean_genes.txt

while IFS='' read -r LINE || [ -n "${LINE}" ]
    do
	tr '\n' ' ' < ../0-alignments/${LINE} | sed 's/\ >/\,>/g' | tr ',' '\n' | egrep -v 'Faerlea_glomerata' | tr ' ' '\n' > ${LINE}.tmp
	mv ${LINE}.tmp ../3-clean_genes/${LINE}
done < contaminated_genes.txt

## And remove the fasta files that do not longer have five taxa (five alignments)

for i in ../3-clean_genes/*fas
    do
	sequences=$( grep -c '>' $i )
	if [ $sequences -lt 5 ]; then
	    echo $i; rm $i
	fi
done

# Re-align these files. Removing one species might have affected the alignment quality.

cp ../3-clean_genes/*fas ../4-new_alignments/
cd ../4-new_alignments/

for i in *fas
    do
	mv -- "$i" "${i%.fasta.filtered.mafft.fas}.fasta.filtered"
done

for f in *filtered
    do
    mafft-linsi $f > $f.mafft
done
rm *filtered

for i in *mafft
    do
	java -jar /home/saabalde/Escritorio/software/BMGE-1.12/BMGE.jar -i $i -t AA -g 0.66:0.79 -of $i.fas > $i.log
done

## Also clean the Notocelis dataset.

cd ../../../09-BMGE_Notocelis_clean/

mkdir -p 00-Faerlea/{0-genes,1-clean_genes,2-new_alignments}
for i in *fas
    do
	faerlea=$( grep -c 'Faerlea' $i )
	if [ $faerlea -gt 0 ]; then
	    cp $i 00-Faerlea/0-genes/
	fi
done

cd 00-Faerlea/0-genes/
ls *fas > ../all_genes.txt
cd ../

fgrep -x -f all_genes.txt ../../09-BMGE_clean/00-Faerlea_contaminants/2-Clan_test/clean_genes.txt > clean_genes.txt
fgrep -x -f all_genes.txt ../../09-BMGE_clean/00-Faerlea_contaminants/2-Clan_test/contaminated_genes.txt > contaminated_genes.txt

while IFS='' read -r LINE || [ -n "${LINE}" ]
    do
	cp ./0-genes/${LINE} ./1-clean_genes/
done < clean_genes.txt

while IFS='' read -r LINE || [ -n "${LINE}" ]
    do
	tr '\n' ' ' < ./0-genes/${LINE} | sed 's/\ >/\,>/g' | tr ',' '\n' | egrep -v 'Faerlea_glomerata' | tr ' ' '\n' > ${LINE}.tmp
	mv ${LINE}.tmp ./1-clean_genes/${LINE}
done < contaminated_genes.txt

cp 1-clean_genes/*fas 2-new_alignments/

cd 2-new_alignments/

for i in *fas
    do
	mv -- "$i" "${i%.fasta.filtered.mafft.fas}.fasta.filtered"
done

for f in *filtered
    do
    mafft-linsi $f > $f.mafft
done
rm *filtered

for i in *mafft
    do
	java -jar /home/saabalde/Escritorio/software/BMGE-1.12/BMGE.jar -i $i -t AA -g 0.66:0.79 -of $i.fas > $i.log
done

## These alignments constitute the Full Dataset, all genes ready for phylogenetic analysis. I will store them in a new directory.

cd ../../../

mkdir 10-FullDataset 10-FullDataset_Notocelis
for i in 09-BMGE_clean/*fas
    do
	faerlea=$( grep -c 'Faerlea' $i )
	if [ $faerlea -lt 1 ]; then
	    cp $i ./10-FullDataset/
	fi
done

cp 09-BMGE_clean/00-Faerlea_contaminants/4-new_alignments/*fas 10-FullDataset/

for i in 09-BMGE_Notocelis_clean/*fas
    do
	faerlea=$( grep -c 'Faerlea' $i )
	if [ $faerlea -lt 1 ]; then
	    cp $i ./10-FullDataset_Notocelis/
	fi
done

cp 09-BMGE_Notocelis_clean/00-Faerlea/2-new_alignments/*fas 10-FullDataset_Notocelis/

## I should rename these directories, because I still have one filter left to do.

mv 10-FullDataset/ 10-Clean_alignments
mv 10-FullDataset_Notocelis/ 10-Clean_alignments_Notocelis

## Count the number of genes per species, as usual.

cat 10-Clean_alignments/*fas | grep '>' | sed 's/>//' | sort | uniq -c > 10-Clean_alignments_StatsPerSpecies.txt
cat 10-Clean_alignments_Notocelis/*fas | grep '>' | sed 's/>//' | sort | uniq -c > 10-Clean_alignments_Notocelis_StatsPerSpecies.txt

## For the final step, we need to run the symmetry tests. As explained in the IQ-TREE documentation:
#    Phylogenetic models rely on various simplifying assumptions to ease computations. If your data severely violate these assumptions, it 
#    might cause bias in phylogenetic estimates of tree topologies and other model parameters. Some common assumptions include:
#        - Treelikeness (all sites in the alignment have evolved under the same tree)
#        - Stationarity (nucleotide/amino-acid frequencies remain constant over time)
#        - Reversibility (substitutions are equally likely in both directions)
#        - Homogeneity (substitution rates remain constant over time).
#    IQ-TREE provides three matched-pairs tests of symmetry to test the two assumptions of stationarity and homogeneity.

mkdir 11-Symmetry_tests 11-Symmetry_tests_Notocelis
cp 10-Clean_alignments/*fas 11-Symmetry_tests/
cp 10-Clean_alignments_Notocelis/*fas 11-Symmetry_tests_Notocelis/

cd 11-Symmetry_tests/
perl /home/saabalde/Escritorio/software/FASconCAT-G/FASconCAT-G_v1.05.pl -l -s > FASconCat.log
rm *mafft.fas
iqtree2 -s FcC_supermatrix.fas -p FcC_supermatrix_partition.txt --symtest-only

cd ../11-Symmetry_tests_Notocelis/
perl /home/saabalde/Escritorio/software/FASconCAT-G/FASconCAT-G_v1.05.pl -l -s > FASconCat.log
rm *mafft.fas
iqtree2 -s FcC_supermatrix.fas -p FcC_supermatrix_partition.txt --symtest-only

## There are 823 aligments in the full dataset that violate these assumptions, and 35 in the Notocelis dataset. I will remove them all.

cd ../
mkdir 12-FullDataset 12-FullDataset_Notocelis

cp 10-Clean_alignments/*fas 12-FullDataset/
cp 10-Clean_alignments_Notocelis/*fas 12-FullDataset_Notocelis/

while IFS='' read -r LINE || [ -n "${LINE}" ]
    do
	rm 12-FullDataset/${LINE}
done < 11-Symmetry_tests/Failed_symmetry_test.txt

while IFS='' read -r LINE || [ -n "${LINE}" ]
    do
	rm 12-FullDataset_Notocelis/${LINE}
done < 11-Symmetry_tests_Notocelis/Failed_symmetry_test.txt

## Count the number of genes per species, as usual. This time, count also how many species per alignment we have.

cat 10-Clean_alignments/*fas | grep '>' | sed 's/>//' | sort | uniq -c > 12-FullDataset_StatsPerSpecies.txt
cat 10-Clean_alignments_Notocelis/*fas | grep '>' | sed 's/>//' | sort | uniq -c > 12-FullDataset_Notocelis_StatsPerSpecies.txt

grep -c '>' 12-FullDataset_Notocelis/*fas | tr ':' ' ' | awk '{print $2}' | sort | uniq -c > 12-FullDataset_StatsPerGene.txt
grep -c '>' 12-FullDataset_Notocelis/*fas | tr ':' ' ' | awk '{print $2}' | sort | uniq -c > 12-FullDataset_Notocelis_StatsPerGene.txt

## At this point, all alignments should be good enough for phylogenetic inference. They have been cleaned from paralogs, likely other 
## non-homologous sequences, contaminants, ambiguously aligned positions and gappy sites, and they meet the phylogenetic assumptions of
## stationarity and homogeneity. This dataset is comoposed of 2764, which is a very good number. I will make a quick tree with them all just
## to see how they look like.

mkdir -p 13-QuickTree_IQtree/{0-Supermatrix,1-IQtree} 13-QuickTree_ASTRAL/{0-genetrees,1-ASTRAL}

cp 12-FullDataset/*fas 13-QuickTree_ASTRAL/0-genetrees/
cp 12-FullDataset/*fas 13-QuickTree_IQtree/0-Supermatrix/

cd 13-QuickTree_IQtree/0-Supermatrix/
perl /home/saabalde/Escritorio/software/FASconCAT-G/FASconCAT-G_v1.05.pl -l -s > FASconCat.log
rm *mafft.fas
cp FcC_supermatrix* ../1-IQtree/
cd ../1-IQtree/
time iqtree -s FcC_supermatrix.fas -spp FcC_supermatrix_partition.txt -m MFP -nt AUTO -bb 1000 -alrt 1000

cd ../../13-QuickTree_ASTRAL/0-genetrees/
for i in *fas
    do
	iqtree -s $i -m MFP -AICc -nt AUTO -bb 1000
done
rm *fas
cat *treefile > ../1-ASTRAL/FullMatrix.trees
cd ../1-ASTRAL/
java -jar -Xmx12000M /home/saabalde/Escritorio/software/Astral/astral.5.7.7.jar -i FullMatrix.trees -o SpeciesTree.FullMatrix.ASTRAL.tre 2> ASTRAL.log

## Note: the alignments OG0004991 and OG0006651 were ignored during tree inference because the number of different sequences is lower than
##       four, the minimum requirement for calculating the Bootstrap support. I need to remember to remove these sequences from the 
##       supermatrix when calculating gene properties.

## However, this dataset is too big for other, more complex, analyses. After the quick tree, I will analyze only those alignments that 
## contain at least one third of the species: 14 species, 34.14% of the taxa. This dataset is made of 567 alignments.

cd ../../
mkdir 14-Dataset_14species

cp 12-FullDataset/*fas 14-Dataset_14species/
for i in 14-Dataset_14species/*fas
    do
	sequences=$( grep -c '>' $i )
	if [ $sequences -lt 14 ]; then
	    rm $i
	fi
done

## Count the number of genes per species and the number of species per gene, as usual.

cat 14-Dataset_14species/*fas | grep '>' |sed 's/>//g' | sort | uniq -c > 14-Dataset_14species_StatsPerSpecies.txt

## The species Sterreria sp (SRR2682099) was lost after applying this filter. This species only had 9 genes in the full dataset, all of them
## containing fewer than 14 species. In fact, it was present in two genes with 13 species. The threshold should probably have been 13, so I
## would not miss any species. However, this would increase the number of genes from 567 to 735, which would make all the analyses slower, 
## and only two genes would not make much of a difference. We know from the FullDataset analyses that this species is sister to all other
## Sterreria, so let's continue to define the inter-family relationships.

mkdir 15-GeneTrees 16-Supermatrix
cp 14-Dataset_14species/* 15-GeneTrees/
cp 14-Dataset_14species/* 16-Supermatrix/

cd 15-GeneTrees/
ls *fas > fasta_files.txt

while IFS='' read -r LINE || [ -n "${LINE}" ]
    do
	cp ../13-QuickTree_ASTRAL/0-genetrees/${LINE}.treefile ./
done < fasta_files.txt 

cd ../16-Supermatrix/
perl /home/saabalde/Escritorio/software/FASconCAT-G/FASconCAT-G_v1.05.pl -l -s -p -n -n > FASconCat.log
rm *mafft.fas

## The supermatrix is 290,384 amino acids long.

## Run phylogenetic analyses over this matrix

mkdir 17-ASTRAL 18-IQtree_nomerge

cat 15-GeneTrees/*treefile > 17-ASTRAL/My_gene_trees.tre
cp 16-Supermatrix/FcC_supermatrix.fas 18-IQtree_nomerge/
cp 16-Supermatrix/FcC_supermatrix_partition.txt 18-IQtree_nomerge/

cd 17-ASTRAL/
java -jar -Xmx12000M /home/saabalde/Escritorio/software/Astral/astral.5.7.7.jar -i My_gene_trees.tre -o SpeciesTree.14species.ASTRAL.tre 2> ASTRAL.log

cd ../18-IQtree_nomerge/
time iqtree -s FcC_supermatrix.fas -spp FcC_supermatrix_partition.txt -m MFP -nt AUTO -bb 1000 -alrt 1000

## Traditional models do not always capture the true complexity of the data. I will try two Site-Specific  models. These models, 
## unlike the partition one, do not consider the different genes in the alignment, but it treats each column as an independent entity. It 
## calculates the properties of each column, and groups the amino acids with similar properties in different categories. The algorithm 
## implemented in IQ-TREE (PMSF) can calculate between 20 and 60 categories. Here, I will try the most simple (20 categories) and most 
## complex (60 categories) models to see if they affect the tree topology.
## Note: To run the Site-Specific model algorithm IQ-TREE needs a guide tree.

cd ../
mkdir 19-IQtree_SiteSpecific_GuideTree 19-IQtree_SiteSpecific_C20 19-IQtree_SiteSpecific_C60

cp 16-Supermatrix/FcC_supermatrix.fas 19-IQtree_SiteSpecific_GuideTree/
cp 16-Supermatrix/FcC_supermatrix.fas 19-IQtree_SiteSpecific_C20/
cp 16-Supermatrix/FcC_supermatrix.fas 19-IQtree_SiteSpecific_C60/

cd 19-IQtree_SiteSpecific_GuideTree/
time iqtree -s FcC_supermatrix.fas -m LG+F+G -nt AUTO -bb 1000 -alrt 1000

cd ../19-IQtree_SiteSpecific_C20/
time iqtree -s FcC_supermatrix.fas -m LG+C20+F+G -ft ../19-IQtree_SiteSpecific_GuideTree/FcC_supermatrix.fas.treefile -bb 1000 -nt AUTO -alrt 1000

cd ../19-IQtree_SiteSpecific_C60/
time iqtree -s FcC_supermatrix.fas -m LG+C60+F+G -ft ../19-IQtree_SiteSpecific_GuideTree/FcC_supermatrix.fas.treefile -bb 1000 -nt AUTO -alrt 1000

## Now that all Maximum Likelihood have run, I would also like to test the Bayesian Inference. Maximum Likelihood and Bayesian Inference
## have a different approach to the data, so they might recover different topologies. If robust, the topology recovered should not change.

## I usually use MrBayes to calculate the bayesian trees. However, with this amount of data it might be better to use a program more 
## efficient in the parallelization of the run. I will use ExaBayes instead, which implements a MPI approach.
## I will run two independent analyses per dataset: 1) unpartition, where all genes are analysed together; and 2) partition, setting a 
## different set of parameters for each gene. In the latter, the only linked parameter of the model is branch lengths. As for the substitution
## model, ExaBayes will calculate empirically the state frequencies and will apply the GTR model for the substitution matrix. State frequencies
## and substitution rates will also be unlinked among partitions.
## The run is defined as follows:
# numRuns 4                      four independent runs per analysis
# numGen 1000000                 run at least 1,000,000 generations
# diagFreq 5000                  check for chain convergence after 5,000 generations
# samplingFreq 200               sample every 2,000 generations
# tuneFreq 100                   tune move parameters every 100 generations
# printFreq 1000                 print a sample to the screen every 1,000 generations
# checkPointInterval 1000        write a checkpoint every 1,000 generations
# numCoupledChains  4 	         run three couple hot chains (and one cold) per independent run
# convergenceCriterion mean      use the Mean Deviation of Split Frequencies (MSDSF) to measure convergence 
# sdsfConvergence 0.005          consider runs converged (and stop) once the MSDSF is below 0.5%: 1-5% is considered good, 0.5% can be 
#                                considered very good convergence
# burninProportion 0.25          discard 25% of the initial samples as burnin

## The partition files must have "DNA, " or "PROT, " before each partition definition.

cd ../
mkdir 20-ExaBayes_Unpartitioned 21-ExaBayes_Partitioned
cp 16-Supermatrix/FcC_supermatrix.phy 20-ExaBayes_Unpartitioned/
cp 16-Supermatrix/{FcC_supermatrix.phy,FcC_supermatrix_partition.txt} 21-ExaBayes_Partitioned/

sed -i 's/LG\,\ /PROT\,\ /g' 21-ExaBayes_Partitioned/FcC_supermatrix_partition.txt 

cd 20-ExaBayes_Unpartitioned/
mpirun -np 4 exabayes -f FcC_supermatrix.phy -m PROT -n Unpartitioned -s 12345 -R 4 -c exabayes.config.unpartitioned.nex

cd ../21-ExaBayes_Partitioned/
mpirun -np 4 exabayes -f FcC_supermatrix.phy -q FcC_supermatrix_partition.txt -m PROT -n Partitioned -s 12345 -R 4 -c exabayes.config.partitioned.nex

## Unfortunately, ExoBayes never ran properly and we couldn't obtain this tree. It got stuck soon after the start.

## Another problem of phylogenomic datasets is that nuclear genes can have very different evolutionary histories, 
## and, as we are working with more than 2000, it is possible that different data subsets can recover different topologies. Thus far, we 
## have only analyzed the third most complete alignments, but there other filters that could be applied. It is common practice to filter 
## nuclear genes based on different properties, such as length, substitution rate, composition heterogeneity, among others.

## Here, I am going to use the method described by Nicolas Mongiardino-Koch (2021, MBE).
## It estimates seven commonly used gene properties (four sources of systematic bias (average pairwise patristic distance, 
## compositional heterogeneity, level of saturation, and root-to-tip variance), two proxies for phylogenetic signal 
## (Robinson-Foulds similarity to a target topology and average bootstrap support), as well as the proportion of variable sites) 
## and it calculates a PCA that measures the relation between phylogenetic signal vs systematic error.

## Such method is described thoroughly in: https://githubmemory.com/repo/mongiardino/genesortR

cd ../
mkdir 24-genesortR

cp 12-FullDataset/*fas 24-genesortR/
cp 13-QuickTree_ASTRAL/1-ASTRAL/FullMatrix.trees 24-genesortR/
cp 13-QuickTree_ASTRAL/1-ASTRAL/SpeciesTree.FullMatrix.ASTRAL.tre 24-genesortR/

cd 24-genesortR/
rm OG0004991_pruned.fasta.filtered.mafft.fas OG0006651_pruned.fasta.filtered.mafft.fas
perl /home/saabalde/Escritorio/software/FASconCAT-G/FASconCAT-G_v1.05.pl -l -s > FASconCat.log
rm *mafft.fas FASconCat.log FcC_info.xls

#  Remove the "LG, " from the partitoins file
sed -i 's/LG\,\ //g' FcC_supermatrix_partition.txt

#  Root the species tree with FigTree, collapse the nodes to leave only the Acoela and Nemertodermatida clades with the R script 
#  "Tree_editing.R", and convert the tree to a cladogram with equal branch lengths.

#  We are ready to filter. Run the script "genesortR.R".
#  27 genes have been discarded as outliers. The new number of alignments is 2735.

#  This analysis was not able to find a "direction", i.e., it doesn't know how to sort the data to maximize the signal and minimize the 
#  error. Hence, the script by default sorts the genes by rate (from the slowest to the fastest evolving), but we can choose what we prefer.
#  All details can be found in the file "properties_sorted_dataset.csv", which contains the genes already sorted.
#  It has also created different files with the genes sorted: 1) an alignment file "sorted_alignment_2735genes.fa"; 2) a partition
#  file "sorted_alignment_2735genes.txt"; and 3) a new gene tree file "sorted_trees_2735genes.tre".
#  A summary of all these matrics can be found in the figure "sorted_figure.pdf".

## Since genesortR did not find a way to filter the genes using all metrics, I will filter the genes according to:
##    - Occupancy
##    - Substitution rate
##    - Level of saturation
##    - Compositional heterogeneity
##    - Average patristic distances (tip-to-tip distance, indicator of LBA)
## I will make subsets with the 567 and 300 slowest evolving genes, showing less saturation, less compositional heterogeneity, shorter 
## patristic distances, and higher occupancy. I chose 567 and 300 genes because these are the same number of genes sorted by completeness, 
## at least 14 species (567, 20.53%) and 16 species (300, 10.97%) in the alignments.

mkdir 00-Subsets
cp ./{FcC_supermatrix.fas,FcC_supermatrix_partition.txt,FullMatrix.trees,SpeciesTree.FullMatrix.ASTRAL.edited.tre} 00-Subsets/
cd 00-Subsets/

## Sort the genes using the genesortR.R script.

## Prepare the subsets to be analyzed

cd ../../
mkdir -p {25-Occupancy_300genes,26-Rate_567genes,27-Rate_300genes,28-Saturation_567genes,29-Saturation-300genes,30-CompHeterogeneity_567genes,31-CompHeterogeneity_300genes,32-PatristicDistance_567genes,33-PatristicDistance_300genes}/{00-genes,01-genetrees,02-supermatrix,03-ASTRAL,04-IQtree,05-SiteSpecific_GuideTree,06-SiteSpecific_C20,07-SiteSpecific_C60}

cp 24-genesortR/00-Subsets/300genes_AveragePatristicDistances.txt 33-PatristicDistance_300genes
cp 24-genesortR/00-Subsets/300genes_CompositionalHeterogeneity.txt 31-CompHeterogeneity_300genes
cp 24-genesortR/00-Subsets/300genes_Saturation.txt 29-Saturation_300genes
cp 24-genesortR/00-Subsets/300genes_SubstitutionRate.txt 27-Rate_300genes
cp 24-genesortR/00-Subsets/567genes_AveragePatristicDistances.txt 32-PatristicDistance_567genes
cp 24-genesortR/00-Subsets/567genes_CompositionalHeterogeneity.txt 30-CompHeterogeneity_567genes
cp 24-genesortR/00-Subsets/567genes_Saturation.txt 28-Saturation_567genes
cp 24-genesortR/00-Subsets/567genes_SubstitutionRate.txt 26-Rate_567genes

## Occupancy: 300 genes

cp 12-FullDataset/*fas 25-Occupancy_300genes/00-genes/

cd 25-Occupancy_300genes/00-genes/
for i in *fas
    do
	sequences=$( grep -c '>' $i )
	if [ $sequences -lt 16 ]; then
	    rm $i
	fi
done

ls *fas > genes.txt
while IFS='' read -r LINE || [ -n "${LINE}" ]
    do
	cp ../../13-QuickTree_ASTRAL/0-genetrees/${LINE}.treefile ../01-genetrees/
done < ./genes.txt 
rm genes.txt 

cp *fas ../02-supermatrix/
cd ../02-supermatrix/
perl /home/saabalde/Escritorio/software/FASconCAT-G/FASconCAT-G_v1.05.pl -l -s > FASconCat.log
rm *mafft.fas

cp ./{FcC_supermatrix.fas,FcC_supermatrix_partition.txt} ../04-IQtree/
cp ./FcC_supermatrix.fas ../05-SiteSpecific_GuideTree/
cp ./FcC_supermatrix.fas ../06-SiteSpecific_C20/
cp ./FcC_supermatrix.fas ../07-SiteSpecific_C60/

cd ../03-ASTRAL/
cat ../01-genetrees/*treefile > My_gene_trees.tre
java -jar -Xmx12000M /home/saabalde/Escritorio/software/Astral/astral.5.7.7.jar -i My_gene_trees.tre -o SpeciesTree.Occupancy300genes.ASTRAL.tre 2> ASTRAL.log

cd ../04-IQtree/
time iqtree -s FcC_supermatrix.fas -spp FcC_supermatrix_partition.txt -m MFP -nt AUTO -bb 1000 -alrt 1000

cd ../05-SiteSpecific_GuideTree/
time iqtree -s FcC_supermatrix.fas -m LG+F+G -nt AUTO -bb 1000 -alrt 1000

cd ../06-SiteSpecific_C20/
time iqtree -s FcC_supermatrix.fas -m LG+C20+F+G -ft ../05-SiteSpecific_GuideTree/FcC_supermatrix.fas.treefile -bb 1000 -nt AUTO -alrt 1000

cd ../07-SiteSpecific_C60/
time iqtree -s FcC_supermatrix.fas -m LG+C60+F+G -ft ../05-SiteSpecific_GuideTree//FcC_supermatrix.fas.treefile -bb 1000 -nt AUTO -alrt 1000

## Substitution Rate: 567 genes

cd ../../26-Rate_567genes/
while IFS='' read -r LINE || [ -n "${LINE}" ]
    do
	cp ../12-FullDataset/${LINE}.fas ./00-genes/
	cp ../13-QuickTree_ASTRAL/0-genetrees/${LINE}.fas.treefile ./01-genetrees/
done < 567genes_SubstitutionRate.txt

cp 00-genes/*fas 02-supermatrix/
cd 02-supermatrix/
perl /home/saabalde/Escritorio/software/FASconCAT-G/FASconCAT-G_v1.05.pl -l -s > FASconCat.log
rm *mafft.fas

cp ./{FcC_supermatrix.fas,FcC_supermatrix_partition.txt} ../04-IQtree/
cp ./FcC_supermatrix.fas ../05-SiteSpecific_GuideTree/
cp ./FcC_supermatrix.fas ../06-SiteSpecific_C20/
cp ./FcC_supermatrix.fas ../07-SiteSpecific_C60/

cd ../03-ASTRAL/
cat ../01-genetrees/*treefile > My_gene_trees.tre
java -jar -Xmx12000M /home/saabalde/Escritorio/software/Astral/astral.5.7.7.jar -i My_gene_trees.tre -o SpeciesTree.Rate567genes.ASTRAL.tre 2> ASTRAL.log

cd ../04-IQtree/
time iqtree -s FcC_supermatrix.fas -spp FcC_supermatrix_partition.txt -m MFP -nt AUTO -bb 1000 -alrt 1000

cd ../05-SiteSpecific_GuideTree/
time iqtree -s FcC_supermatrix.fas -m LG+F+G -nt AUTO -bb 1000 -alrt 1000

cd ../06-SiteSpecific_C20/
time iqtree -s FcC_supermatrix.fas -m LG+C20+F+G -ft ../05-SiteSpecific_GuideTree/FcC_supermatrix.fas.treefile -bb 1000 -nt AUTO -alrt 1000

cd ../07-SiteSpecific_C60/
time iqtree -s FcC_supermatrix.fas -m LG+C60+F+G -ft ../05-SiteSpecific_GuideTree//FcC_supermatrix.fas.treefile -bb 1000 -nt AUTO -alrt 1000

## Substitution Rate: 300 genes

cd ../../27-Rate_300genes/
while IFS='' read -r LINE || [ -n "${LINE}" ]
    do
	cp ../12-FullDataset/${LINE}.fas ./00-genes/
	cp ../13-QuickTree_ASTRAL/0-genetrees/${LINE}.fas.treefile ./01-genetrees/
done < 300genes_SubstitutionRate.txt 

cp 00-genes/*fas 02-supermatrix/
cd 02-supermatrix/
perl /home/saabalde/Escritorio/software/FASconCAT-G/FASconCAT-G_v1.05.pl -l -s > FASconCat.log
rm *mafft.fas

cp ./{FcC_supermatrix.fas,FcC_supermatrix_partition.txt} ../04-IQtree/
cp ./FcC_supermatrix.fas ../05-SiteSpecific_GuideTree/
cp ./FcC_supermatrix.fas ../06-SiteSpecific_C20/
cp ./FcC_supermatrix.fas ../07-SiteSpecific_C60/

cd ../03-ASTRAL/
cat ../01-genetrees/*treefile > My_gene_trees.tre
java -jar -Xmx12000M /home/saabalde/Escritorio/software/Astral/astral.5.7.7.jar -i My_gene_trees.tre -o SpeciesTree.Rate300genes.ASTRAL.tre 2> ASTRAL.log

cd ../04-IQtree/
time iqtree -s FcC_supermatrix.fas -spp FcC_supermatrix_partition.txt -m MFP -nt AUTO -bb 1000 -alrt 1000

cd ../05-SiteSpecific_GuideTree/
time iqtree -s FcC_supermatrix.fas -m LG+F+G -nt AUTO -bb 1000 -alrt 1000

cd ../06-SiteSpecific_C20/
time iqtree -s FcC_supermatrix.fas -m LG+C20+F+G -ft ../05-SiteSpecific_GuideTree/FcC_supermatrix.fas.treefile -bb 1000 -nt AUTO -alrt 1000

cd ../07-SiteSpecific_C60/
time iqtree -s FcC_supermatrix.fas -m LG+C60+F+G -ft ../05-SiteSpecific_GuideTree//FcC_supermatrix.fas.treefile -bb 1000 -nt AUTO -alrt 1000

## Saturation: 567 genes

cd ../../28-Saturation_567genes/
while IFS='' read -r LINE || [ -n "${LINE}" ]
    do
	cp ../12-FullDataset/${LINE}.fas ./00-genes/
	cp ../13-QuickTree_ASTRAL/0-genetrees/${LINE}.fas.treefile ./01-genetrees/
done < 567genes_Saturation.txt

cp 00-genes/*fas 02-supermatrix/
cd 02-supermatrix/
perl /home/saabalde/Escritorio/software/FASconCAT-G/FASconCAT-G_v1.05.pl -l -s > FASconCat.log
rm *mafft.fas

cp ./{FcC_supermatrix.fas,FcC_supermatrix_partition.txt} ../04-IQtree/
cp ./FcC_supermatrix.fas ../05-SiteSpecific_GuideTree/
cp ./FcC_supermatrix.fas ../06-SiteSpecific_C20/
cp ./FcC_supermatrix.fas ../07-SiteSpecific_C60/

cd ../03-ASTRAL/
cat ../01-genetrees/*treefile > My_gene_trees.tre
java -jar -Xmx12000M /home/saabalde/Escritorio/software/Astral/astral.5.7.7.jar -i My_gene_trees.tre -o SpeciesTree.Saturation567genes.ASTRAL.tre 2> ASTRAL.log

cd ../04-IQtree/
time iqtree -s FcC_supermatrix.fas -spp FcC_supermatrix_partition.txt -m MFP -nt AUTO -bb 1000 -alrt 1000

cd ../05-SiteSpecific_GuideTree/
time iqtree -s FcC_supermatrix.fas -m LG+F+G -nt AUTO -bb 1000 -alrt 1000

cd ../06-SiteSpecific_C20/
time iqtree -s FcC_supermatrix.fas -m LG+C20+F+G -ft ../05-SiteSpecific_GuideTree/FcC_supermatrix.fas.treefile -bb 1000 -nt AUTO -alrt 1000

cd ../07-SiteSpecific_C60/
time iqtree -s FcC_supermatrix.fas -m LG+C60+F+G -ft ../05-SiteSpecific_GuideTree//FcC_supermatrix.fas.treefile -bb 1000 -nt AUTO -alrt 1000

## Saturation: 300 genes

cd ../../29-Saturation_300genes/
while IFS='' read -r LINE || [ -n "${LINE}" ]
    do
	cp ../12-FullDataset/${LINE}.fas ./00-genes/
	cp ../13-QuickTree_ASTRAL/0-genetrees/${LINE}.fas.treefile ./01-genetrees/
done < 300genes_Saturation.txt 

cp 00-genes/*fas 02-supermatrix/
cd 02-supermatrix/
perl /home/saabalde/Escritorio/software/FASconCAT-G/FASconCAT-G_v1.05.pl -l -s > FASconCat.log
rm *mafft.fas

cp ./{FcC_supermatrix.fas,FcC_supermatrix_partition.txt} ../04-IQtree/
cp ./FcC_supermatrix.fas ../05-SiteSpecific_GuideTree/
cp ./FcC_supermatrix.fas ../06-SiteSpecific_C20/
cp ./FcC_supermatrix.fas ../07-SiteSpecific_C60/

cd ../03-ASTRAL/
cat ../01-genetrees/*treefile > My_gene_trees.tre
java -jar -Xmx12000M /home/saabalde/Escritorio/software/Astral/astral.5.7.7.jar -i My_gene_trees.tre -o SpeciesTree.Saturation300genes.ASTRAL.tre 2> ASTRAL.log

cd ../04-IQtree/
time iqtree -s FcC_supermatrix.fas -spp FcC_supermatrix_partition.txt -m MFP -nt AUTO -bb 1000 -alrt 1000

cd ../05-SiteSpecific_GuideTree/
time iqtree -s FcC_supermatrix.fas -m LG+F+G -nt AUTO -bb 1000 -alrt 1000

cd ../06-SiteSpecific_C20/
time iqtree -s FcC_supermatrix.fas -m LG+C20+F+G -ft ../05-SiteSpecific_GuideTree/FcC_supermatrix.fas.treefile -bb 1000 -nt AUTO -alrt 1000

cd ../07-SiteSpecific_C60/
time iqtree -s FcC_supermatrix.fas -m LG+C60+F+G -ft ../05-SiteSpecific_GuideTree//FcC_supermatrix.fas.treefile -bb 1000 -nt AUTO -alrt 1000

## Compositional Heterogeneity: 567 genes

cd ../../30-CompHeterogeneity_567genes/
while IFS='' read -r LINE || [ -n "${LINE}" ]
    do
	cp ../12-FullDataset/${LINE}.fas ./00-genes/
	cp ../13-QuickTree_ASTRAL/0-genetrees/${LINE}.fas.treefile ./01-genetrees/
done < 567genes_CompositionalHeterogeneity.txt 

cp 00-genes/*fas 02-supermatrix/
cd 02-supermatrix/
perl /home/saabalde/Escritorio/software/FASconCAT-G/FASconCAT-G_v1.05.pl -l -s > FASconCat.log
rm *mafft.fas

cp ./{FcC_supermatrix.fas,FcC_supermatrix_partition.txt} ../04-IQtree/
cp ./FcC_supermatrix.fas ../05-SiteSpecific_GuideTree/
cp ./FcC_supermatrix.fas ../06-SiteSpecific_C20/
cp ./FcC_supermatrix.fas ../07-SiteSpecific_C60/

cd ../03-ASTRAL/
cat ../01-genetrees/*treefile > My_gene_trees.tre
java -jar -Xmx12000M /home/saabalde/Escritorio/software/Astral/astral.5.7.7.jar -i My_gene_trees.tre -o SpeciesTree.CompositionalHeterogeneity567genes.ASTRAL.tre 2> ASTRAL.log

cd ../04-IQtree/
time iqtree -s FcC_supermatrix.fas -spp FcC_supermatrix_partition.txt -m MFP -nt AUTO -bb 1000 -alrt 1000

cd ../05-SiteSpecific_GuideTree/
time iqtree -s FcC_supermatrix.fas -m LG+F+G -nt AUTO -bb 1000 -alrt 1000

cd ../06-SiteSpecific_C20/
time iqtree -s FcC_supermatrix.fas -m LG+C20+F+G -ft ../05-SiteSpecific_GuideTree/FcC_supermatrix.fas.treefile -bb 1000 -nt AUTO -alrt 1000

cd ../07-SiteSpecific_C60/
time iqtree -s FcC_supermatrix.fas -m LG+C60+F+G -ft ../05-SiteSpecific_GuideTree//FcC_supermatrix.fas.treefile -bb 1000 -nt AUTO -alrt 1000

## Compositional Heterogeneity: 300 genes

cd ../../31-CompHeterogeneity_300genes/
while IFS='' read -r LINE || [ -n "${LINE}" ]
    do
	cp ../12-FullDataset/${LINE}.fas ./00-genes/
	cp ../13-QuickTree_ASTRAL/0-genetrees/${LINE}.fas.treefile ./01-genetrees/
done < 300genes_CompositionalHeterogeneity.txt 

cp 00-genes/*fas 02-supermatrix/
cd 02-supermatrix/
perl /home/saabalde/Escritorio/software/FASconCAT-G/FASconCAT-G_v1.05.pl -l -s > FASconCat.log
rm *mafft.fas

cp ./{FcC_supermatrix.fas,FcC_supermatrix_partition.txt} ../04-IQtree/
cp ./FcC_supermatrix.fas ../05-SiteSpecific_GuideTree/
cp ./FcC_supermatrix.fas ../06-SiteSpecific_C20/
cp ./FcC_supermatrix.fas ../07-SiteSpecific_C60/

cd ../03-ASTRAL/
cat ../01-genetrees/*treefile > My_gene_trees.tre
java -jar -Xmx12000M /home/saabalde/Escritorio/software/Astral/astral.5.7.7.jar -i My_gene_trees.tre -o SpeciesTree.CompositionalHeterogeneity300genes.ASTRAL.tre 2> ASTRAL.log

cd ../04-IQtree/
time iqtree -s FcC_supermatrix.fas -spp FcC_supermatrix_partition.txt -m MFP -nt AUTO -bb 1000 -alrt 1000

cd ../05-SiteSpecific_GuideTree/
time iqtree -s FcC_supermatrix.fas -m LG+F+G -nt AUTO -bb 1000 -alrt 1000

cd ../06-SiteSpecific_C20/
time iqtree -s FcC_supermatrix.fas -m LG+C20+F+G -ft ../05-SiteSpecific_GuideTree/FcC_supermatrix.fas.treefile -bb 1000 -nt AUTO -alrt 1000

cd ../07-SiteSpecific_C60/
time iqtree -s FcC_supermatrix.fas -m LG+C60+F+G -ft ../05-SiteSpecific_GuideTree//FcC_supermatrix.fas.treefile -bb 1000 -nt AUTO -alrt 1000

## Patristic Distances: 567 genes

cd ../../32-PatristicDistance_567genes/
while IFS='' read -r LINE || [ -n "${LINE}" ]
    do
	cp ../12-FullDataset/${LINE}.fas ./00-genes/
	cp ../13-QuickTree_ASTRAL/0-genetrees/${LINE}.fas.treefile ./01-genetrees/
done < 567genes_AveragePatristicDistances.txt 

cp 00-genes/*fas 02-supermatrix/
cd 02-supermatrix/
perl /home/saabalde/Escritorio/software/FASconCAT-G/FASconCAT-G_v1.05.pl -l -s > FASconCat.log
rm *mafft.fas

cp ./{FcC_supermatrix.fas,FcC_supermatrix_partition.txt} ../04-IQtree/
cp ./FcC_supermatrix.fas ../05-SiteSpecific_GuideTree/
cp ./FcC_supermatrix.fas ../06-SiteSpecific_C20/
cp ./FcC_supermatrix.fas ../07-SiteSpecific_C60/

cd ../03-ASTRAL/
cat ../01-genetrees/*treefile > My_gene_trees.tre
java -jar -Xmx12000M /home/saabalde/Escritorio/software/Astral/astral.5.7.7.jar -i My_gene_trees.tre -o SpeciesTree.AvPatristicDistance567genes.ASTRAL.tre 2> ASTRAL.log

cd ../04-IQtree/
time iqtree -s FcC_supermatrix.fas -spp FcC_supermatrix_partition.txt -m MFP -nt AUTO -bb 1000 -alrt 1000

cd ../05-SiteSpecific_GuideTree/
time iqtree -s FcC_supermatrix.fas -m LG+F+G -nt AUTO -bb 1000 -alrt 1000

cd ../06-SiteSpecific_C20/
time iqtree -s FcC_supermatrix.fas -m LG+C20+F+G -ft ../05-SiteSpecific_GuideTree/FcC_supermatrix.fas.treefile -bb 1000 -nt AUTO -alrt 1000

cd ../07-SiteSpecific_C60/
time iqtree -s FcC_supermatrix.fas -m LG+C60+F+G -ft ../05-SiteSpecific_GuideTree//FcC_supermatrix.fas.treefile -bb 1000 -nt AUTO -alrt 1000

## Patristic Distances: 300 genes

cd ../../33-PatristicDistance_300genes/
while IFS='' read -r LINE || [ -n "${LINE}" ]
    do
	cp ../12-FullDataset/${LINE}.fas ./00-genes/
	cp ../13-QuickTree_ASTRAL/0-genetrees/${LINE}.fas.treefile ./01-genetrees/
done < 300genes_AveragePatristicDistances.txt 

cp 00-genes/*fas 02-supermatrix/
cd 02-supermatrix/
perl /home/saabalde/Escritorio/software/FASconCAT-G/FASconCAT-G_v1.05.pl -l -s > FASconCat.log
rm *mafft.fas

cp ./{FcC_supermatrix.fas,FcC_supermatrix_partition.txt} ../04-IQtree/
cp ./FcC_supermatrix.fas ../05-SiteSpecific_GuideTree/
cp ./FcC_supermatrix.fas ../06-SiteSpecific_C20/
cp ./FcC_supermatrix.fas ../07-SiteSpecific_C60/

cd ../03-ASTRAL/
cat ../01-genetrees/*treefile > My_gene_trees.tre
java -jar -Xmx12000M /home/saabalde/Escritorio/software/Astral/astral.5.7.7.jar -i My_gene_trees.tre -o SpeciesTree.AvPatristicDistance300genes.ASTRAL.tre 2> ASTRAL.log

cd ../04-IQtree/
time iqtree -s FcC_supermatrix.fas -spp FcC_supermatrix_partition.txt -m MFP -nt AUTO -bb 1000 -alrt 1000

cd ../05-SiteSpecific_GuideTree/
time iqtree -s FcC_supermatrix.fas -m LG+F+G -nt AUTO -bb 1000 -alrt 1000

cd ../06-SiteSpecific_C20/
time iqtree -s FcC_supermatrix.fas -m LG+C20+F+G -ft ../05-SiteSpecific_GuideTree/FcC_supermatrix.fas.treefile -bb 1000 -nt AUTO -alrt 1000

cd ../07-SiteSpecific_C60/
time iqtree -s FcC_supermatrix.fas -m LG+C60+F+G -ft ../05-SiteSpecific_GuideTree//FcC_supermatrix.fas.treefile -bb 1000 -nt AUTO -alrt 1000


## Count the number of genes per species and the number of species per gene for each one of the subsets.

cat 25-Occupancy_300genes/00-genes/*fas | grep '>' | sort | uniq -c > 25-Occupancy_300genes_StatsPerSpecies.txt
cat 26-Rate_567genes/00-genes/*fas | grep '>' | sort | uniq -c > 26-Rate_567genes_StatsPerSpecies.txt
cat 27-Rate_300genes/00-genes/*fas | grep '>' | sort | uniq -c > 27-Rate_300genes_StatsPerSpecies.txt
cat 28-Saturation_567genes/00-genes/*fas | grep '>' | sort | uniq -c > 28-Saturation_567genes_StatsPerSpecies.txt
cat 29-Saturation_300genes/00-genes/*fas | grep '>' | sort | uniq -c > 29-Saturation_300genes_StatsPerSpecies.txt
cat 30-CompHeterogeneity_567genes/00-genes/*fas | grep '>' | sort | uniq -c > 30-CompHeterogeneity_567genes_StatsPerSpecies.txt
cat 31-CompHeterogeneity_300genes/00-genes/*fas | grep '>' | sort | uniq -c > 31-CompHeterogeneity_300genes_StatsPerSpecies.txt
cat 32-PatristicDistance_567genes/00-genes/*fas | grep '>' | sort | uniq -c > 32-PatristicDistance_567genes_StatsPerSpecies.txt
cat 33-PatristicDistance_300genes/00-genes/*fas | grep '>' | sort | uniq -c > 33-PatristicDistance_300genes_StatsPerSpecies.txt

## All the subsets have all species but three. The species Sterreria sp. (SRR2682099) is lost when a minimum of 16 species is required in
## the alignments, when only the 300 slowest evolving genes or suffering less from compositional heterogeneity are selected. This is not 
## a problem because that species is well defined in the tree, and it was already missing in all other (but the Full Dataset) analyses).
## Additionally, the species Sterreria lundini (P15761_181) is lost when the 300 genes suffering less from compositional heterogeneity
## are selected.

grep -c '>' 25-Occupancy_300genes/00-genes/*fas | tr ':' ' ' | awk '{print $2}' | sort | uniq -c  > 25-Occupancy_300genes_StatsPerGene.txt
grep -c '>' 26-Rate_567genes/00-genes/*fas | tr ':' ' ' | awk '{print $2}' | sort | uniq -c > 26-Rate_567genes_StatsPerGene.txt 
grep -c '>' 27-Rate_300genes/00-genes/*fas | tr ':' ' ' | awk '{print $2}' | sort | uniq -c > 27-Rate_300genes_StatsPerGene.txt 
grep -c '>' 28-Saturation_567genes/00-genes/*fas | tr ':' ' ' | awk '{print $2}' | sort | uniq -c > 28-Saturation_567genes_StatsPerGene.txt 
grep -c '>' 29-Saturation_300genes/00-genes/*fas | tr ':' ' ' | awk '{print $2}' | sort | uniq -c > 29-Saturation_300genes_StatsPerGene.txt 
grep -c '>' 30-CompHeterogeneity_567genes/00-genes/*fas | tr ':' ' ' | awk '{print $2}' | sort | uniq -c > 30-CompHeterogeneity_567genes_StatsPerGene.txt
grep -c '>' 31-CompHeterogeneity_300genes/00-genes/*fas | tr ':' ' ' | awk '{print $2}' | sort | uniq -c > 31-CompHeterogeneity_300genes_StatsPerGene.txt
grep -c '>' 32-PatristicDistance_567genes/00-genes/*fas | tr ':' ' ' | awk '{print $2}' | sort | uniq -c > 32-PatristicDistance_567genes_StatsPerGene.txt
grep -c '>' 33-PatristicDistance_300genes/00-genes/*fas | tr ':' ' ' | awk '{print $2}' | sort | uniq -c > 33-PatristicDistance_300genes_StatsPerGene.txt


## The results are very different among subsets. Whereas the occupancy datasets seem to have recovered a strong, meaningful topology, the others
## are largely unresolved. Hence, I will focus only on this one for the latest analysis

## Another Bayesian analysis we need to run is PhyloBayes. PhyloBayes implements the CAT model, a site specific model for proteins, 
## accounting for the biochemical properties of each amino acid. You can predefine the number of categories you want to use, as with the 
## PFSM model of IQ-TREE, but it is better to let the program find the best fit to the data.
## This is supposed to be the most advanced model in phylogenetics. However, it is very computationally expensive and time consuming, and 
## it is practically unfeasible for matrices of this size. Instead, what we can try is to run these analyses over smaller matrices. I will
## use the occupancy matrix with the 300 most complete genes.

## Although the CAT-GTR model is very hard to converge, the more efficient CAT-F81 (or Poisson) has been proven to recover less accurate trees 
## than partition and CAT-GTR models. That's why we'll focus just on CAT-GTR and do our best to let it run until convergence.

## See: Whelan and Halanych (2017, Syst. Bio.) https://doi.org/10.1093/sysbio/syw084
## And: Szánthó et al. (2022, bioRxiv) https://doi.org/10.1101/2022.03.03.482715

cd 25-Occupancy_300genes/
mkdir 11-PhyloBayes
cd 11-PhyloBayes/

mpirun -np 16 pb_mpi -d FcC_supermatrix.phy -s -cat -gtr -dgam 4 Xenacoelomorpha_300genes_chain1
mpirun -np 16 pb_mpi -d FcC_supermatrix.phy -s -cat -gtr -dgam 4 Xenacoelomorpha_300genes_chain2
mpirun -np 16 pb_mpi -d FcC_supermatrix.phy -s -cat -gtr -dgam 4 Xenacoelomorpha_300genes_chain3
mpirun -np 16 pb_mpi -d FcC_supermatrix.phy -s -cat -gtr -dgam 4 Xenacoelomorpha_300genes_chain4



## The tree topology seems to be pretty stable now, but the position of the Dakuidae seems to be a little uncertain. The two options are 
## sister to the "mix clade" that contains Nadina or sister to Proporidae+Mecynostomidae. To test this, I will run a topology test to see
## which option is the preferred. I will include in the test all the sister-relaitonships posible to discard alternative topologies.
## I will do this with the full dataset and the one containing only orthogroups with at least 14 species.

cd ../../
mkdir 34-TopologyTests_FullDataset 35-TopologyTests_14species
cp 13-QuickTree_IQtree/1-IQtree/{FcC_supermatrix.fas,FcC_supermatrix_partition.txt} 34-TopologyTests_FullDataset/
cp 16-Supermatrix/{FcC_supermatrix.fas,FcC_supermatrix_partition.txt} 35-TopologyTests_14species/

cd  34-TopologyTests_FullDataset
time iqtree -s FcC_supermatrix.fas -spp FcC_supermatrix_partition.txt -m MFP -nt AUTO -z Alternative_topologies.tre -n 0 -zb 10000 -zw -au -wsl -wpl -safe

cd ../35-TopologyTests_14species/
time iqtree -s FcC_supermatrix.fas -spp FcC_supermatrix_partition.txt -m MFP -nt AUTO -z Alternative_topologies.tre -n 0 -zb 10000 -zw -au -wsl -wpl -safe


## Now that we know how the tree is supposed to look like, it is time to pass to the heavy stuff and try to find out the position of 
## Notocelis in the tree. We need to replace first the genes without Notocelis by those that do have this species.
## Again, I will use the complete dataset and the one with at least 14 species.

cd ../
mkdir 36-Fulldataset_Plus_Notocelis
cp 12-FullDataset/*fas 36-Fulldataset_Plus_Notocelis/
cp 12-FullDataset_Notocelis/*fas 36-Fulldataset_Plus_Notocelis/

cd ../
mkdir 37-FullDataset_Supermatrix 38-Notocelis_TopologyTest
cp 36-Fulldataset_Plus_Notocelis/* 37-FullDataset_Supermatrix/

cd 37-FullDataset_Supermatrix/
perl /home/saabalde/Escritorio/software/FASconCAT-G/FASconCAT-G_v1.05.pl -l -s > FASconCat.log
rm *mafft.fas
cp FcC_supermatrix* ../38-Notocelis_TopologyTest/

cd ../38-Notocelis_TopologyTest/
time iqtree -s FcC_supermatrix.fas -spp FcC_supermatrix_partition.txt -m MFP -nt AUTO -z Alternative_topologies.tre -n 0 -zb 10000 -zw -au -wsl -wpl -safe

cd ../
mkdir 39-FullDataset_14species_Notocelis
cp 14-Dataset_14species/OG000*fas 39-FullDataset_14species_Notocelis/
cp 12-FullDataset_Notocelis/OG000* 39-FullDataset_14species_Notocelis/

cd 39-FullDataset_14species_Notocelis/
for i in *fas; do seqs=$( grep -c '>' ${i} ); if [ $seqs -lt 14 ]; then echo $i; fi; done

cd ../
mkdir 40-FullDataset_14species_Notocelis_Supermatrix
cp 39-FullDataset_14species_Notocelis/*fas 40-FullDataset_14species_Notocelis_Supermatrix/

cd 40-FullDataset_14species_Notocelis_Supermatrix/
perl /home/saabalde/Escritorio/software/FASconCAT-G/FASconCAT-G_v1.05.pl -l -s > FASconCat.log
rm *mafft.fas

cd ../
mkdir 41-Notocelis_14species_TopologyTests
cp 40-FullDataset_14species_Notocelis_Supermatrix/FcC_supermatrix* 41-Notocelis_14species_TopologyTests/
cp 38-Notocelis_TopologyTest/Alternative_topologies.tre 41-Notocelis_14species_TopologyTests/
cd 41-Notocelis_14species_TopologyTests/
time iqtree -s FcC_supermatrix.fas -spp FcC_supermatrix_partition.txt -m MFP -nt AUTO -z Alternative_topologies.tre -n 0 -zb 10000 -zw -au -wsl -wpl -safe


## Following the methods used by Cunha et al. (2021, Syst. Biol.), it might be the case that most of the genes in the dataset make noise,
## which would hamper phylogenetic inference. The Likelihood Mapping method is not really a method to test the relative support of each 
## topology in a dataset, as I was interpreting it, but to measure the amount of phylogenetic informativeness of a gene or a matrix. I mean,
## how able is a gene to resolve a specific relationship. Hence, I will test the amount of phylogenetic signal of eahc gene in the dataset,
## and then pick the informative ones to see if they can place Notocelis in the tree.

mkdir 57-Notocelis_Likelihoodmapping
cp 12-FullDataset_Notocelis/*fas 57-Notocelis_Likelihoodmapping/

cd 57-Notocelis_Likelihoodmapping/
for gene in *fas
    do
    time iqtree -s ${gene} -m MFP -nt AUTO -lmap ALL -lmclust clusters.nex -n 0 -wql
    rm ${gene}
done

## After inspecting the genes, only 39 are informative about the position of Notocelis.

# I run some analyses in 58-InformativeGenes
# I also removed all the species branching earlier than Proporidae and Isodiametridae (and within these only the most complete ones were kept
# as outgroup) and re-ran some analyses in 59-InformativeGenes_ReducedTaxa


## Now I would like to try a new method just released by IQ-TREE. It is called MAST, and you can read more about it here:
#  https://www.biorxiv.org/content/10.1101/2022.10.06.511210v1

## As the manual explains: "The MAST model allows each tree to have its own topology, branch lengths, substitution model, nucleotide or amino 
## acid frequencies, and model of rate heterogeneity across sites." This model compares the support of each of the proposed topologies in
## the data, but in a more flexible way because it is site-specific and it allows to unlink all relevant parameters of the substituion 
## models and the trees. It returns the "weight" of each of the topologies. Interestingly, it allows to investigate possible causes of 
## conflict such as introgression (if the weights of the minor topologies is similar).

## See: http://www.iqtree.org/doc/Complex-Models
## See: https://twitter.com/saabalde/status/1585262731858436096

## To run this model, I will prepare a subset of the data with only those genes that contain at least one species of the families of
## interest plus an outgroup: Mecynostomidae, Proporidae, Mix, Dakuidae, Notocelis, outgroup. Then, to reduce the number of topologies to be
## tested I will run a classical topology test and keep only those trees that are not significantly rejected by the data.
## I will also run PhyloBayes over this dataset.

mkdir 60-Newdataset_MAST
cp 12-FullDataset/*fas 60-Newdataset_MAST/
cp 12-FullDataset_Notocelis/*fas 60-Newdataset_MAST/
cd 60-Newdataset_MAST/

for i in *fas
    do
	tr '\n' ' ' < $i | sed 's/\ >/\,>/g' | tr ',' '\n' | egrep -v '19_228|19_375|19_380|20_038|20_053|20_082|P15761_149|P15761_157|P15761_165|P15761_173|P15761_181|P15761_189|SRR2500940|SRR2681155|SRR2682004|SRR2682099|SRR2682154|SRR3105703|SRR3105704|SRR5760179|SRR6375633|SRR8454219|SRR8641368' | tr ' ' '\n' > ${i}.tmp
	mv ${i}.tmp ${i}
done

for i in *fas
    do
	sequences=$( grep -c '>' $i )
	if [ $sequences -lt 5 ]; then
	    rm $i
	fi
done

for i in *fas
    do
	Convolutidae=$( egrep -c 'DRR151142|P15761_125|P15761_141|SRR2681679|SRR8506641|SRR8617822' $i )
	Mecynostomidae=$( egrep -c '20_005|20_115|P15761_110|SRR3105702' $i )
	Dakuidae=$( egrep -c 'P15761_117|20_132' $i )
	Notocelis=$( grep -c '20_023' $i )
	Outgroup=$( egrep -c '20_026|20_063|20_073|20_093|P15761_101|P15761_102|P15761_133|SRR6374833|SRR8524599' $i )
	
	if [ $Convolutidae -lt 1 ] || [ $Mecynostomidae -lt 1 ] || [ $Dakuidae -lt 1 ] || [ $Notocelis -lt 1 ] || [ $Outgroup -lt 1 ]; then
	    rm $i
	fi
done

for i in *fas
    do
    sed -i '/>/! s/\-//g' $i
	mv -- "$i" "${i%.fasta.filtered.mafft.fas}.fasta"
done

## The number of genes have been reduced dramatically, from 2774 to 597. Also, I did not filter out the "Mix" clade but it should be fine:
## the species there have 18 genes (Nadina), 27 (Aphanostoma), and 25 (Eumecynostomum).

## Calculate some stats
cd ../
cat 60-Newdataset_MAST/*fasta | grep '>' | sort | uniq -c


mkdir 61_NewDataset_Mafft
cp 60-Newdataset_MAST/* 61_NewDataset_Mafft/

cd 61_NewDataset_Mafft/
for f in *fasta
    do
    mafft-linsi $f > $f.mafft
done
rm *fasta

cd ../
mkdir 62-NewDataset_BMGE
cp 61_NewDataset_Mafft/*mafft 62-NewDataset_BMGE/

cd 62-NewDataset_BMGE/
for i in *mafft
    do
	java -jar /home/saabalde/Escritorio/software/BMGE-1.12/BMGE.jar -i $i -t AA -g 0.66:0.79 -of $i.fas > $i.log
done
rm *mafft

cd ../
mkdir 63-NewDataset_Genetrees
cp 62-NewDataset_BMGE/*fas 63-NewDataset_Genetrees/

cd 63-NewDataset_Genetrees/
for i in *fas
    do
	iqtree -s $i -m MFP -AICc -nt AUTO -bb 1000
done
rm *fas

cd ../
mkdir 64-NewDataset_Supermatrix
cp 62-NewDataset_BMGE/*fas 64-NewDataset_Supermatrix/

cd 64-NewDataset_Supermatrix/
perl /home/saabalde/Escritorio/software/FASconCAT-G/FASconCAT-G_v1.05.pl -l -s > FASconCat.log
rm *mafft.fas

cd ../
mkdir 65-NewDataset_TopologyTest
cp 64-NewDataset_Supermatrix/FcC_supermatrix* 65-NewDataset_TopologyTest/

mkdir -p 66-MAST_TR/{1-Unlink_all,2-Link_gamma,3-Link_frequencies,4-Unlink_model,5-Unlink_gamma,6-Link_all}

cp 64-NewDataset_Supermatrix/FcC_supermatrix.fas 66-MAST_TR/1-Unlink_all/
cp 64-NewDataset_Supermatrix/FcC_supermatrix.fas 66-MAST_TR/2-Link_gamma/
cp 64-NewDataset_Supermatrix/FcC_supermatrix.fas 66-MAST_TR/3-Link_frequencies/
cp 64-NewDataset_Supermatrix/FcC_supermatrix.fas 66-MAST_TR/4-Unlink_model/
cp 64-NewDataset_Supermatrix/FcC_supermatrix.fas 66-MAST_TR/5-Unlink_gamma/
cp 64-NewDataset_Supermatrix/FcC_supermatrix.fas 66-MAST_TR/6-Link_all/

cd 66-MAST_TR/1-Unlink_all/IQtree.sh <==
time $iqtree_MAST -s FcC_supermatrix.fas -m "TMIX{LG+FO+G,LG+FO+G,LG+FO+G,LG+FO+G,LG+FO+G,LG+FO+G,LG+FO+G,LG+FO+G,LG+FO+G,LG+FO+G,LG+FO+G,LG+FO+G,LG+FO+G,LG+FO+G,LG+FO+G,LG+FO+G,LG+FO+G,LG+FO+G,LG+FO+G,LG+FO+G,LG+FO+G,LG+FO+G,LG+FO+G,LG+FO+G,LG+FO+G,LG+FO+G,LG+FO+G,LG+FO+G,LG+FO+G,LG+FO+G,LG+FO+G,LG+FO+G,LG+FO+G,LG+FO+G,LG+FO+G,LG+FO+G,LG+FO+G,LG+FO+G,LG+FO+G,LG+FO+G,LG+FO+G,LG+FO+G,LG+FO+G,LG+FO+G,LG+FO+G,LG+FO+G,LG+FO+G,LG+FO+G,LG+FO+G,LG+FO+G,LG+FO+G,LG+FO+G,LG+FO+G,LG+FO+G,LG+FO+G,LG+FO+G,LG+FO+G}+TR" -te Alternative_topologies.tres -nt AUTO

cd ../2-Link_gamma/IQtree.sh <==
time $iqtree_MAST -s FcC_supermatrix.fas -m "TMIX{LG+FO,LG+FO,LG+FO,LG+FO,LG+FO,LG+FO,LG+FO,LG+FO,LG+FO,LG+FO,LG+FO,LG+FO,LG+FO,LG+FO,LG+FO,LG+FO,LG+FO,LG+FO,LG+FO,LG+FO,LG+FO,LG+FO,LG+FO,LG+FO,LG+FO,LG+FO,LG+FO,LG+FO,LG+FO,LG+FO,LG+FO,LG+FO,LG+FO,LG+FO,LG+FO,LG+FO,LG+FO,LG+FO,LG+FO,LG+FO,LG+FO,LG+FO,LG+FO,LG+FO,LG+FO,LG+FO,LG+FO,LG+FO,LG+FO,LG+FO,LG+FO,LG+FO,LG+FO,LG+FO,LG+FO,LG+FO,LG+FO}+G+TR" -te Alternative_topologies.tres -nt AUTO

cd ../3-Link_frequencies/IQtree.sh <==
time $iqtree_MAST -s FcC_supermatrix.fas -m "TMIX{LG+F+G,LG+F+G,LG+F+G,LG+F+G,LG+F+G,LG+F+G,LG+F+G,LG+F+G,LG+F+G,LG+F+G,LG+F+G,LG+F+G,LG+F+G,LG+F+G,LG+F+G,LG+F+G,LG+F+G,LG+F+G,LG+F+G,LG+F+G,LG+F+G,LG+F+G,LG+F+G,LG+F+G,LG+F+G,LG+F+G,LG+F+G,LG+F+G,LG+F+G,LG+F+G,LG+F+G,LG+F+G,LG+F+G,LG+F+G,LG+F+G,LG+F+G,LG+F+G,LG+F+G,LG+F+G,LG+F+G,LG+F+G,LG+F+G,LG+F+G,LG+F+G,LG+F+G,LG+F+G,LG+F+G,LG+F+G,LG+F+G,LG+F+G,LG+F+G,LG+F+G,LG+F+G,LG+F+G,LG+F+G,LG+F+G,LG+F+G}+TR" -te Alternative_topologies.tres -nt AUTO

cd ../4-Unlink_model/IQtree.sh <==
time $iqtree_MAST -s FcC_supermatrix.fas -m "TMIX{LG+F,LG+F,LG+F,LG+F,LG+F,LG+F,LG+F,LG+F,LG+F,LG+F,LG+F,LG+F,LG+F,LG+F,LG+F,LG+F,LG+F,LG+F,LG+F,LG+F,LG+F,LG+F,LG+F,LG+F,LG+F,LG+F,LG+F,LG+F,LG+F,LG+F,LG+F,LG+F,LG+F,LG+F,LG+F,LG+F,LG+F,LG+F,LG+F,LG+F,LG+F,LG+F,LG+F,LG+F,LG+F,LG+F,LG+F,LG+F,LG+F,LG+F,LG+F,LG+F,LG+F,LG+F,LG+F,LG+F,LG+F}+G+TR" -te Alternative_topologies.tres -nt AUTO

cd ../5-Unlink_gamma/IQtree.sh <==
time $iqtree_MAST -s FcC_supermatrix.fas -m "LG+FO+TMIX{G,G,G,G,G,G,G,G,G,G,G,G,G,G,G,G,G,G,G,G,G,G,G,G,G,G,G,G,G,G,G,G,G,G,G,G,G,G,G,G,G,G,G,G,G,G,G,G,G,G,G,G,G,G,G,G,G}+TR" -te Alternative_topologies.tres -nt AUTO

cd ../6-Link_all/IQtree.sh <==
time $iqtree_MAST -s FcC_supermatrix.fas -m "LG+FO+G+TR" -te Alternative_topologies.tres -nt AUTO

cd ../../
mkdir 67-NewDataset_PhyloBayes
cp 64-NewDataset_Supermatrix/FcC_supermatrix.fas 67-NewDataset_PhyloBayes/

cd 67-NewDataset_PhyloBayes/
~/Escritorio/software/Fasta2Phylip.pl FcC_supermatrix.fas FcC_supermatrix.phy
rm FcC_supermatrix.fas
mpirun -np 8 pb_mpi -d FcC_supermatrix.phy -s -cat -gtr -dgam 4 Xenacoelomorpha_NewDataset_chain1
mpirun -np 8 pb_mpi -d FcC_supermatrix.phy -s -cat -gtr -dgam 4 Xenacoelomorpha_NewDataset_chain2
mpirun -np 8 pb_mpi -d FcC_supermatrix.phy -s -cat -gtr -dgam 4 Xenacoelomorpha_NewDataset_chain3


## Another thing I would like to do is to infer a chronogram for Acoelomorpha. However, this soft bodied, microscopic worms are not very
## good at making fossils. Hence, I need to use secondary calibrations. The problem with this approach is that their position in the animal
## tree of life is not well define, which would change radically the age of the nodes. To circumvent this obstacle, I will download two 
## datasets: one supporting Nephrozoa (Cannon et al., 2016, Nature, 10.1038/nature16520) and another supporting Xenambulacraria (Philippe et.
## al., 2019, Current Biology, 10.1016/j.cub.2019.04.009). I will use them to infer the main cladogenetic events in Acoelomorpha using 
## fossils from other phyla, and then apply those dates to my tree.

## I already calculated the Metazoa chronogram during the N. westbladi genome project, although we did not publish it. I am using these 
## estimates to make the Xenacoelomorpha chronogram (15% of error and uniform distributions):
##     - The age of the root will be set between 540 and 635 (no error in the oldest age)
##     - The split between Acoela and Nemertodermatida between 500 and 575
##     - The split between Praesagittifera naikaiensis and Symsagittifera roscoffensis between 175 and 200

## This analysis will be based on the 50 most complete genes to ensure we get all the species.

mkdir -p 78-MCMCtree/{01-Genes,02-Supermatrix,03-BASEML_preparedata,04-MCMCtree_priorestimates,05-MCMCtree_calculatedivergences,06-Check_convergence,07-MCMCtreeR_plotresults}

# Make a list of the 50 most complete genes and copy them to 01-Genes
cd 78-MCMCtree/02-Supermatrix
cp ../01-Genes/* .
for i in *fas; do mv -- "$i" "${i%_pruned.fasta.filtered.mafft.fas}.fas"; done
for i in $( ls *fas | sed 's/\.fas//g' ); do ~/Escritorio/software/Fasta2Phylip.pl $i.fas $i.phy; done

# Change the tab separation in all *phy files by five spaces
for i in OG*; do sed -i 's/\./\_/g' $i; done
for i in *phy; do cat $i >> Supermatrix.phy; echo "" >> Supermatrix.phy; done

# Make a list of the taxa to build a reference tree without branch lengths
cd ../
cp 02-Supermatrix/Supermatrix.phy .
cat 02-Supermatrix/*fas | grep '>' | sort | uniq | sed 's/>//g'

# Estimate the branch lengths to calculate a reasonable prior for the rate
mkdir Estimate_branch_lengths
cp 02-Supermatrix/*fas Estimate_branch_lengths/
cd Estimate_branch_lengths/
perl /home/saabalde/Escritorio/software/FASconCAT-G/FASconCAT-G_v1.05.pl -l -s > FASconCat.log
rm OG*.fas
iqtree -s FcC_supermatrix.fas -spp FcC_supermatrix_partition.txt -m MFP -nt AUTO -bb 1000 -alrt 1000

# With alpha = 2 and a divergence ca. 635 MYA, the beta of the rate is: 2 * 635 / 0.83335 = 1523.96952061 (ca. 1524)

# Use the R script to calibrate the nodes
cp Supermatrix.phy 03-BASEML_preparedata/
cp Supermatrix.phy 04-MCMCtree_priorestimates/
cp Supermatrix.phy 05-MCMCtree_calculatedivergences/
cp Xenacoelomorpha_MCMCtree_Input.tre 03-BASEML_preparedata/
cp Xenacoelomorpha_MCMCtree_Input.tre 04-MCMCtree_priorestimates/
cp Xenacoelomorpha_MCMCtree_Input.tre 05-MCMCtree_calculatedivergences/

# Estimate the Hessian and the Gradient
mcmctree MCMC_step1_controlfile.ctl

# This will create the Hessian and the Gradient for the analysis. However, the model is the simple Poisson with no gamma rates. We need to 
# change this. First delete the "out.BV" and "rst" files.

rm out.BV rst*

# Second, modify the "*.tmp" files to read the model parameters from the "wag.dat" file; "model = 2" (empirical rates); add three new lines
# with the model parameters.

sed -i '/aaRatefile/ s/=/=\ wag.dat/g' *tmp*ctl
sed -i '/model/ s/0/2/g' *tmp*ctl | head
sed -ie '/wag.dat/a fix_alpha\ =\ 0\nalpha\ =\ \.5\nncatG\ =\ 4' tmp*.ctl       # After the line that contains "wag.dat", append three lines

# Run codeml to recalculate the Hessian matrix and append the Hessian of each gene to the "in.BV" file.

for i in tmp*ctl; do codeml ${i}; cat rst2 >> in.BV; echo "" >> in.BV; done

# The new "in.BV" file contains the Hessian matrix for each gene calculated with the WAG+GAMMA model. Now, copy the files we need for the 
# following steps in the working directory. Remember to change the "usedata" parameter to "0" when sampling from the prior and "2" when
# calculating the posterior of the divergence times.

cp in.BV ../04-MCMCtree_priorestimates/
cp in.BV ../05-MCMCtree_calculatedivergences/

# Calculate the prior distribution
cd ../04-MCMCtree_priorestimates/
mcmctree MCMC_priorsampling.ctl 2>&1 | tee log_MCMCtree_prior.txt

# Calculate the divergence times
cd ../05-MCMCtree_calculatedivergences/
mcmctree MCMC_step2_controlfile.ctl 2>&1 | tee log_MCMCtree_posterior.txt

## I used the MCMCtreeR package to calculate chain convergence and plot the tree

############################################################################################################################################
############################################################################################################################################

## The position of Notocelis still bothers me. The result of the MAST test suggests there might be some introgression between Notocelis and
## both Convolutidae and Mecynostomidae, but I still have to test that.
## I have considered many approaches, but the traditional D-statistic requires a tree with three terminal tips which I do not have, because:
## 1) I would need to limit a lot the number of genes to pick one species per family; 2) I would have had to merge Mecynostomidae and 
## Convolutidae, or 3) I would have had to mix genes from different species of the same family to have a full dataset. Instead, Dfoil allows
## to test introgression in a symmetric four-taxa tree. Thus far, the latter wrapper ExDfoil allows to include all species per family, and 
## it automatically make all possible subsets with four tips plus an outgroup.
## I will test the topology (((Mecynostomidae, Concolutidae),(Dakuidae,Notocelis),Outgroup). The outgroup will be the most complete species 
## from Isodimetridae and Proporidae. Thus, I will include all genes that have at least one representative of each species and the outgroup,
## which will be chosen later when I define which species is the most complete.
## I will also draw the chronogram for this subset of the tree manually, based on the MCMCtree result.

## Start by removing all genes without at least one of these species

cd ../../
mkdir -p 80-Introgression/{01-Genes,02-MAFFT,03-Supermatrix,04-ExDfoil}
cp 36-Fulldataset_Plus_Notocelis/* 80-Introgression/01-Genes/

cd 80-Introgression/01-Genes/
for i in *fas
    do
    mv -- "$i" "${i%_pruned.fasta.filtered.mafft.fas}_pruned.fasta"
done

for i in *fasta
    do
	Convolutidae=$( egrep -c 'DRR151142|P15761_125|P15761_141|SRR2681679|SRR8506641|SRR8617822' $i )
	Mecynostomidae=$( egrep -c '20_005|20_115|P15761_110|SRR3105702' $i )
	Dakuidae=$( egrep -c 'P15761_117|20_132' $i )
	Notocelis=$( grep -c '20_023' $i )
	
	if [ $Convolutidae -lt 1 ] || [ $Mecynostomidae -lt 1 ] || [ $Dakuidae -lt 1 ] || [ $Notocelis -lt 1 ] || [ $Outgroup -lt 1 ]; then
	    rm $i
	fi
done

## There are only 61 genes. Now, find the species that will be the outgroup

cat * | grep '>' | sort | uniq -c

## Aphanostoma pulchra is present in 52 of these genes, so it is the best candidate. Remove all genes where this species is not present

for gene in *fasta
    do
	Aphanostoma=$( grep -c "SRR6374833" ${gene} )
	
	if [ $Aphanostoma -lt 1 ]; then
	    rm $gene
	fi
done

## Remove all other species from these files

for i in *fasta
    do
	tr '\n' ' ' < $i | sed 's/\ >/\,>/g' | tr ',' '\n' | egrep 'DRR151142|P15761_125|P15761_141|SRR2681679|SRR8506641|SRR8617822|20_005|20_115|P15761_110|SRR3105702|P15761_117|20_132|20_023|SRR6374833' | tr ' ' '\n' > ${i}.tmp
	mv ${i}.tmp ${i}
done

## Realign all these sequences, just to make sure everything is in place

cp * ../02-MAFFT/
cd ../02-MAFFT/

for gene in *fasta
    do
    mafft-linsi ${gene} > ${gene}.fas
done
rm *fasta

## Concatenate these alignments into a supermatrix

cp * ../03-Supermatrix/

cd ../03-Supermatrix/
perl /home/saabalde/Escritorio/software/FASconCAT-G/FASconCAT-G_v1.05.pl -l -s > FASconCat.log
sed -i '/>/ s/\./\_/g' FcC_supermatrix.fas
rm *fasta.fas

## The final matrix has 13 species, 52 genes, and 31,210 sites

## Now it's time to run ExDfoil. First, I need to run the R script "DFOIL_Picker.R", which needs a list of taxa and a tree. I draw the tree
## manually, to make sure the nodes are sorted from younger to older. Besides, the branch lengths were extracted from the MCMCtree chronogram.
## In addition, the names in the list are also sorted from younger to older.
## The files are: "Reference_tree.tre" and "Names_list.txt". I also create "Outgroup.txt", which includes the name of the outgroup species.
## This creates a list of all the possible four taxa combinations in the list.

Rscript ../Modified_scripts/DFOIL_Picker.R ../Names_list.txt ../Reference_tree.tre 
mv myoutput.txt DFOIL_picker.outgroup.txt

## Now, run "fasta2foiler.py" to get the site-pattern count data for each test. The input files are:
#      - The output from the previous step: "DFOIL_picker.outgroup.txt"
#      - The fasta file
#      - The fle with the name of the outgroup species: "Outgroup.txt".

fasta2foiler.sh DFOIL_picker.outgroup.txt ../03-Supermatrix/FcC_supermatrix.fas ../Outgroup.txt

## This step has created one file per each four taxa combination, including the frequency of each of the possible loci (AAAAA, AABBA, and so
## on). Now, we can use this information to run the original Dfoil algorithm over each of these groups. To do that, we use another wrapper 
## from ExDfoil: "dfoiler_alt.sh"
## Importantly, this wrapper calls Dfoil with the argument "--mode dfoilalt", which does not consider singletons. As shown in Lambert et al. 
## (2019, Mol. Ecol. Res.), the presence of singletons overestimates the rates of introgression due to the inclusion of false positives.

dfoiler_alt.sh

## This step has created two folders: "dfoil", which includes the outgroup of the Dfoil analysis, and "precheck", with theresults of some
## tests to make sure the data make sense.
## Unfortunately, many of these tests return warnings, but I am not sure of why. It says that the species might be in the wrong order, but I
## do not see that. I will continue and see what happens.

## The next step is to summarise the results. I use the wrapper "summarizer_alt.sh", which basically reformats the counts files to be more
## easily read by R.
## According to the tutorial: "for each test, it will print the name of each taxon, the number of singleton counts for each taxon, the 
##                             introgression result, and the D-statistic followed by the p-value for each of the four DFOIL components."
## Then, put everything together in one file.

parallel '/home/saabalde/Escritorio/software/ExDFOIL/Scripts/summarizer_alt.sh < <(echo {})' ::: counts/*.counts
cat summary/*.summary_alt > all.summary.alt.txt

## All is ready, but to visualise the results it is necessary to link the name of the individuals to the families we are testing. Thus, I
## use the wrapper "associate.sh" to link "all.summary.alt.txt" to the sample information stored in "Sample_information.txt". this creates
## the output file "all.summary.alt_appended.txt".

associate.sh all.summary.alt.txt ../Sample_information.txt

## Now I continue in R, in the script "Visualize_Dfoil.R"
## No signatures of introgression were found in the data. I guess the warnings we saw in the precheck files could explain this, but it
## could also be that there is no introgression among these families.

## I am going to try only the comparisons where there is one species per family, just to have a smaller dataset and be able to check what
## is going on.

mkdir ../05-ExDfoil_OneSpeciesPerFamily
cd ../05-ExDfoil_OneSpeciesPerFamily/

Rscript ../Modified_scripts/DFOIL_Picker.R ../Names_list.txt ../Reference_tree.tre 
mv myoutput.txt DFOIL_picker.outgroup.txt
grep "Notocelis" DFOIL_picker.outgroup.txt | egrep "P15761_125|P15761_141|SRR8617822|SRR2681679|DRR151142" | egrep "SRR3105702|20_115|P15761_110|20_005" | egrep "20_132|P15761_117" > names_filtered.txt
fasta2foiler.sh names_filtered.txt ../03-Supermatrix/FcC_supermatrix.fas ../Outgroup.txt
dfoiler_alt.sh
parallel '/home/saabalde/Escritorio/software/ExDFOIL/Scripts/summarizer_alt.sh < <(echo {})' ::: counts/*.counts
cat summary/*.summary_alt > all.summary.alt.txt
associate.sh all.summary.alt.txt ../Sample_information.txt

## Now I continue in R, in the script "Visualize_Dfoil.R"
## As expected, no signatures of introgression were found in the data. However, I think the species are well sorted so I do not think that
## is the reason. Looking at the precheck files, I think the substitution patterns are a bit off, but that might be because of substitution
## saturation. In any case, you also find this kind of error in the example data, where they did find introgression, so I don't think that
## is the reason.

## Given the Dfoil test did not find any signature of introgression, I am going to try the D-statistic. I said before that the D-statistic 
## would not work in this case for a bunch of reasons. However, we can get over them. To have a simple three taxon tree, I will consider only
## Mecynostomidae, Convolutidae, and Dakuidae+Notocelis. If there is any sign of introgression, then I can calculate this for each species
## in Dakuidae independently. To not remove any species in these families, I will use the R package "evobiR", whose function "CalcPopD" 
## allows more than one specimen per population (in my case, species per family) as long as it is correctly stated in the alignment.

cd ../
mkdir 06-D_statistic
cp 03-Supermatrix/FcC_supermatrix.fas 06-D_statistic/
cd 06-D_statistic/

## This analysis has returned a significantly negative D (introgression between Mecynostomidae and all the Dakuidae species). However, 
## CalcPopD does not allow to test the significant of this result. I will make an alignment for all four species combinations and run CalcD
## over them instead.

## Note: I realised too late that Haploposthia lactomaculata is also part of Mecynostomidae. I added it to the analyses, but it is not present
## in the genes stored in the directory 01-Genes. Bear that in mind.

cd ../
mkdir -p 07-Genes_New/{01,02,03,04,05,06,07,08,09,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75}

cp 01-Genes/* 07-Genes_New/
cd 07-Genes_New/

for i in *fasta
    do
	sed -i '/>/ s/\./\_/g' $i
done

for i in *fasta
    do
    tr '\n' ' ' < $i | sed 's/\ >/\,>/g' | tr ',' '\n' | egrep 'SRR3105702_Childia_submaculatum|P15761_125_Anaperus_rubellus|20_132_Philocelis_karlingi|SRR6374833_Aphanostoma_pulchra' | tr ' ' '\n' > 01/${i}
    tr '\n' ' ' < $i | sed 's/\ >/\,>/g' | tr ',' '\n' | egrep 'SRR3105702_Childia_submaculatum|P15761_125_Anaperus_rubellus|P15761_117_Philactinoposthia_rhammifera|SRR6374833_Aphanostoma_pulchra' | tr ' ' '\n' > 02/${i}
    tr '\n' ' ' < $i | sed 's/\ >/\,>/g' | tr ',' '\n' | egrep 'SRR3105702_Childia_submaculatum|P15761_125_Anaperus_rubellus|20_023_Notocelis_gullmarensis|SRR6374833_Aphanostoma_pulchra' | tr ' ' '\n' > 03/${i}
    tr '\n' ' ' < $i | sed 's/\ >/\,>/g' | tr ',' '\n' | egrep 'SRR3105702_Childia_submaculatum|P15761_141_Anaperus_tvaerminnensis|20_132_Philocelis_karlingi|SRR6374833_Aphanostoma_pulchra' | tr ' ' '\n' > 04/${i}
    tr '\n' ' ' < $i | sed 's/\ >/\,>/g' | tr ',' '\n' | egrep 'SRR3105702_Childia_submaculatum|P15761_141_Anaperus_tvaerminnensis|P15761_117_Philactinoposthia_rhammifera|SRR6374833_Aphanostoma_pulchra' | tr ' ' '\n' > 05/${i}
    tr '\n' ' ' < $i | sed 's/\ >/\,>/g' | tr ',' '\n' | egrep 'SRR3105702_Childia_submaculatum|P15761_141_Anaperus_tvaerminnensis|20_023_Notocelis_gullmarensis|SRR6374833_Aphanostoma_pulchra' | tr ' ' '\n' > 06/${i}
    tr '\n' ' ' < $i | sed 's/\ >/\,>/g' | tr ',' '\n' | egrep 'SRR3105702_Childia_submaculatum|SRR8617822_Neochildia_fusca|20_132_Philocelis_karlingi|SRR6374833_Aphanostoma_pulchra' | tr ' ' '\n' > 07/${i}
    tr '\n' ' ' < $i | sed 's/\ >/\,>/g' | tr ',' '\n' | egrep 'SRR3105702_Childia_submaculatum|SRR8617822_Neochildia_fusca|P15761_117_Philactinoposthia_rhammifera|SRR6374833_Aphanostoma_pulchra' | tr ' ' '\n' > 08/${i}
    tr '\n' ' ' < $i | sed 's/\ >/\,>/g' | tr ',' '\n' | egrep 'SRR3105702_Childia_submaculatum|SRR8617822_Neochildia_fusca|20_023_Notocelis_gullmarensis|SRR6374833_Aphanostoma_pulchra' | tr ' ' '\n' > 09/${i}
    tr '\n' ' ' < $i | sed 's/\ >/\,>/g' | tr ',' '\n' | egrep 'SRR3105702_Childia_submaculatum|SRR2681679_Convolutriloba_macropyga|20_132_Philocelis_karlingi|SRR6374833_Aphanostoma_pulchra' | tr ' ' '\n' > 10/${i}
    tr '\n' ' ' < $i | sed 's/\ >/\,>/g' | tr ',' '\n' | egrep 'SRR3105702_Childia_submaculatum|SRR2681679_Convolutriloba_macropyga|P15761_117_Philactinoposthia_rhammifera|SRR6374833_Aphanostoma_pulchra' | tr ' ' '\n' > 11/${i}
    tr '\n' ' ' < $i | sed 's/\ >/\,>/g' | tr ',' '\n' | egrep 'SRR3105702_Childia_submaculatum|SRR2681679_Convolutriloba_macropyga|20_023_Notocelis_gullmarensis|SRR6374833_Aphanostoma_pulchra' | tr ' ' '\n' > 12/${i}
    tr '\n' ' ' < $i | sed 's/\ >/\,>/g' | tr ',' '\n' | egrep 'SRR3105702_Childia_submaculatum|DRR151142_Praesagittifera_naikaiensis|20_132_Philocelis_karlingi|SRR6374833_Aphanostoma_pulchra' | tr ' ' '\n' > 13/${i}
    tr '\n' ' ' < $i | sed 's/\ >/\,>/g' | tr ',' '\n' | egrep 'SRR3105702_Childia_submaculatum|DRR151142_Praesagittifera_naikaiensis|P15761_117_Philactinoposthia_rhammifera|SRR6374833_Aphanostoma_pulchra' | tr ' ' '\n' > 14/${i}
    tr '\n' ' ' < $i | sed 's/\ >/\,>/g' | tr ',' '\n' | egrep 'SRR3105702_Childia_submaculatum|DRR151142_Praesagittifera_naikaiensis|20_023_Notocelis_gullmarensis|SRR6374833_Aphanostoma_pulchra' | tr ' ' '\n' > 15/${i}
    tr '\n' ' ' < $i | sed 's/\ >/\,>/g' | tr ',' '\n' | egrep '20_115_Childia_crassum|P15761_125_Anaperus_rubellus|20_132_Philocelis_karlingi|SRR6374833_Aphanostoma_pulchra' | tr ' ' '\n' > 16/${i}
    tr '\n' ' ' < $i | sed 's/\ >/\,>/g' | tr ',' '\n' | egrep '20_115_Childia_crassum|P15761_125_Anaperus_rubellus|P15761_117_Philactinoposthia_rhammifera|SRR6374833_Aphanostoma_pulchra' | tr ' ' '\n' > 17/${i}
    tr '\n' ' ' < $i | sed 's/\ >/\,>/g' | tr ',' '\n' | egrep '20_115_Childia_crassum|P15761_125_Anaperus_rubellus|20_023_Notocelis_gullmarensis|SRR6374833_Aphanostoma_pulchra' | tr ' ' '\n' > 18/${i}
    tr '\n' ' ' < $i | sed 's/\ >/\,>/g' | tr ',' '\n' | egrep '20_115_Childia_crassum|P15761_141_Anaperus_tvaerminnensis|20_132_Philocelis_karlingi|SRR6374833_Aphanostoma_pulchra' | tr ' ' '\n' > 19/${i}
    tr '\n' ' ' < $i | sed 's/\ >/\,>/g' | tr ',' '\n' | egrep '20_115_Childia_crassum|P15761_141_Anaperus_tvaerminnensis|P15761_117_Philactinoposthia_rhammifera|SRR6374833_Aphanostoma_pulchra' | tr ' ' '\n' > 20/${i}
    tr '\n' ' ' < $i | sed 's/\ >/\,>/g' | tr ',' '\n' | egrep '20_115_Childia_crassum|P15761_141_Anaperus_tvaerminnensis|20_023_Notocelis_gullmarensis|SRR6374833_Aphanostoma_pulchra' | tr ' ' '\n' > 21/${i}
    tr '\n' ' ' < $i | sed 's/\ >/\,>/g' | tr ',' '\n' | egrep '20_115_Childia_crassum|SRR8617822_Neochildia_fusca|20_132_Philocelis_karlingi|SRR6374833_Aphanostoma_pulchra' | tr ' ' '\n' > 22/${i}
    tr '\n' ' ' < $i | sed 's/\ >/\,>/g' | tr ',' '\n' | egrep '20_115_Childia_crassum|SRR8617822_Neochildia_fusca|P15761_117_Philactinoposthia_rhammifera|SRR6374833_Aphanostoma_pulchra' | tr ' ' '\n' > 23/${i}
    tr '\n' ' ' < $i | sed 's/\ >/\,>/g' | tr ',' '\n' | egrep '20_115_Childia_crassum|SRR8617822_Neochildia_fusca|20_023_Notocelis_gullmarensis|SRR6374833_Aphanostoma_pulchra' | tr ' ' '\n' > 24/${i}
    tr '\n' ' ' < $i | sed 's/\ >/\,>/g' | tr ',' '\n' | egrep '20_115_Childia_crassum|SRR2681679_Convolutriloba_macropyga|20_132_Philocelis_karlingi|SRR6374833_Aphanostoma_pulchra' | tr ' ' '\n' > 25/${i}
    tr '\n' ' ' < $i | sed 's/\ >/\,>/g' | tr ',' '\n' | egrep '20_115_Childia_crassum|SRR2681679_Convolutriloba_macropyga|P15761_117_Philactinoposthia_rhammifera|SRR6374833_Aphanostoma_pulchra' | tr ' ' '\n' > 26/${i}
    tr '\n' ' ' < $i | sed 's/\ >/\,>/g' | tr ',' '\n' | egrep '20_115_Childia_crassum|SRR2681679_Convolutriloba_macropyga|20_023_Notocelis_gullmarensis|SRR6374833_Aphanostoma_pulchra' | tr ' ' '\n' > 27/${i}
    tr '\n' ' ' < $i | sed 's/\ >/\,>/g' | tr ',' '\n' | egrep '20_115_Childia_crassum|DRR151142_Praesagittifera_naikaiensis|20_132_Philocelis_karlingi|SRR6374833_Aphanostoma_pulchra' | tr ' ' '\n' > 28/${i}
    tr '\n' ' ' < $i | sed 's/\ >/\,>/g' | tr ',' '\n' | egrep '20_115_Childia_crassum|DRR151142_Praesagittifera_naikaiensis|P15761_117_Philactinoposthia_rhammifera|SRR6374833_Aphanostoma_pulchra' | tr ' ' '\n' > 29/${i}
    tr '\n' ' ' < $i | sed 's/\ >/\,>/g' | tr ',' '\n' | egrep '20_115_Childia_crassum|DRR151142_Praesagittifera_naikaiensis|20_023_Notocelis_gullmarensis|SRR6374833_Aphanostoma_pulchra' | tr ' ' '\n' > 30/${i}
    tr '\n' ' ' < $i | sed 's/\ >/\,>/g' | tr ',' '\n' | egrep 'P15761_110_Childia_vivipara|P15761_125_Anaperus_rubellus|20_132_Philocelis_karlingi|SRR6374833_Aphanostoma_pulchra' | tr ' ' '\n' > 31/${i}
    tr '\n' ' ' < $i | sed 's/\ >/\,>/g' | tr ',' '\n' | egrep 'P15761_110_Childia_vivipara|P15761_125_Anaperus_rubellus|P15761_117_Philactinoposthia_rhammifera|SRR6374833_Aphanostoma_pulchra' | tr ' ' '\n' > 32/${i}
    tr '\n' ' ' < $i | sed 's/\ >/\,>/g' | tr ',' '\n' | egrep 'P15761_110_Childia_vivipara|P15761_125_Anaperus_rubellus|20_023_Notocelis_gullmarensis|SRR6374833_Aphanostoma_pulchra' | tr ' ' '\n' > 33/${i}
    tr '\n' ' ' < $i | sed 's/\ >/\,>/g' | tr ',' '\n' | egrep 'P15761_110_Childia_vivipara|P15761_141_Anaperus_tvaerminnensis|20_132_Philocelis_karlingi|SRR6374833_Aphanostoma_pulchra' | tr ' ' '\n' > 34/${i}
    tr '\n' ' ' < $i | sed 's/\ >/\,>/g' | tr ',' '\n' | egrep 'P15761_110_Childia_vivipara|P15761_141_Anaperus_tvaerminnensis|P15761_117_Philactinoposthia_rhammifera|SRR6374833_Aphanostoma_pulchra' | tr ' ' '\n' > 35/${i}
    tr '\n' ' ' < $i | sed 's/\ >/\,>/g' | tr ',' '\n' | egrep 'P15761_110_Childia_vivipara|P15761_141_Anaperus_tvaerminnensis|20_023_Notocelis_gullmarensis|SRR6374833_Aphanostoma_pulchra' | tr ' ' '\n' > 36/${i}
    tr '\n' ' ' < $i | sed 's/\ >/\,>/g' | tr ',' '\n' | egrep 'P15761_110_Childia_vivipara|SRR8617822_Neochildia_fusca|20_132_Philocelis_karlingi|SRR6374833_Aphanostoma_pulchra' | tr ' ' '\n' > 37/${i}
    tr '\n' ' ' < $i | sed 's/\ >/\,>/g' | tr ',' '\n' | egrep 'P15761_110_Childia_vivipara|SRR8617822_Neochildia_fusca|P15761_117_Philactinoposthia_rhammifera|SRR6374833_Aphanostoma_pulchra' | tr ' ' '\n' > 38/${i}
    tr '\n' ' ' < $i | sed 's/\ >/\,>/g' | tr ',' '\n' | egrep 'P15761_110_Childia_vivipara|SRR8617822_Neochildia_fusca|20_023_Notocelis_gullmarensis|SRR6374833_Aphanostoma_pulchra' | tr ' ' '\n' > 39/${i}
    tr '\n' ' ' < $i | sed 's/\ >/\,>/g' | tr ',' '\n' | egrep 'P15761_110_Childia_vivipara|SRR2681679_Convolutriloba_macropyga|20_132_Philocelis_karlingi|SRR6374833_Aphanostoma_pulchra' | tr ' ' '\n' > 40/${i}
    tr '\n' ' ' < $i | sed 's/\ >/\,>/g' | tr ',' '\n' | egrep 'P15761_110_Childia_vivipara|SRR2681679_Convolutriloba_macropyga|P15761_117_Philactinoposthia_rhammifera|SRR6374833_Aphanostoma_pulchra' | tr ' ' '\n' > 41/${i}
    tr '\n' ' ' < $i | sed 's/\ >/\,>/g' | tr ',' '\n' | egrep 'P15761_110_Childia_vivipara|SRR2681679_Convolutriloba_macropyga|20_023_Notocelis_gullmarensis|SRR6374833_Aphanostoma_pulchra' | tr ' ' '\n' > 42/${i}
    tr '\n' ' ' < $i | sed 's/\ >/\,>/g' | tr ',' '\n' | egrep 'P15761_110_Childia_vivipara|DRR151142_Praesagittifera_naikaiensis|20_132_Philocelis_karlingi|SRR6374833_Aphanostoma_pulchra' | tr ' ' '\n' > 43/${i}
    tr '\n' ' ' < $i | sed 's/\ >/\,>/g' | tr ',' '\n' | egrep 'P15761_110_Childia_vivipara|DRR151142_Praesagittifera_naikaiensis|P15761_117_Philactinoposthia_rhammifera|SRR6374833_Aphanostoma_pulchra' | tr ' ' '\n' > 44/${i}
    tr '\n' ' ' < $i | sed 's/\ >/\,>/g' | tr ',' '\n' | egrep 'P15761_110_Childia_vivipara|DRR151142_Praesagittifera_naikaiensis|20_023_Notocelis_gullmarensis|SRR6374833_Aphanostoma_pulchra' | tr ' ' '\n' > 45/${i}
    tr '\n' ' ' < $i | sed 's/\ >/\,>/g' | tr ',' '\n' | egrep '20_005_Paramecynostomum_diversicolor|P15761_125_Anaperus_rubellus|20_132_Philocelis_karlingi|SRR6374833_Aphanostoma_pulchra' | tr ' ' '\n' > 46/${i}
    tr '\n' ' ' < $i | sed 's/\ >/\,>/g' | tr ',' '\n' | egrep '20_005_Paramecynostomum_diversicolor|P15761_125_Anaperus_rubellus|P15761_117_Philactinoposthia_rhammifera|SRR6374833_Aphanostoma_pulchra' | tr ' ' '\n' > 47/${i}
    tr '\n' ' ' < $i | sed 's/\ >/\,>/g' | tr ',' '\n' | egrep '20_005_Paramecynostomum_diversicolor|P15761_125_Anaperus_rubellus|20_023_Notocelis_gullmarensis|SRR6374833_Aphanostoma_pulchra' | tr ' ' '\n' > 48/${i}
    tr '\n' ' ' < $i | sed 's/\ >/\,>/g' | tr ',' '\n' | egrep '20_005_Paramecynostomum_diversicolor|P15761_141_Anaperus_tvaerminnensis|20_132_Philocelis_karlingi|SRR6374833_Aphanostoma_pulchra' | tr ' ' '\n' > 49/${i}
    tr '\n' ' ' < $i | sed 's/\ >/\,>/g' | tr ',' '\n' | egrep '20_005_Paramecynostomum_diversicolor|P15761_141_Anaperus_tvaerminnensis|P15761_117_Philactinoposthia_rhammifera|SRR6374833_Aphanostoma_pulchra' | tr ' ' '\n' > 50/${i}
    tr '\n' ' ' < $i | sed 's/\ >/\,>/g' | tr ',' '\n' | egrep '20_005_Paramecynostomum_diversicolor|P15761_141_Anaperus_tvaerminnensis|20_023_Notocelis_gullmarensis|SRR6374833_Aphanostoma_pulchra' | tr ' ' '\n' > 51/${i}
    tr '\n' ' ' < $i | sed 's/\ >/\,>/g' | tr ',' '\n' | egrep '20_005_Paramecynostomum_diversicolor|SRR8617822_Neochildia_fusca|20_132_Philocelis_karlingi|SRR6374833_Aphanostoma_pulchra' | tr ' ' '\n' > 52/${i}
    tr '\n' ' ' < $i | sed 's/\ >/\,>/g' | tr ',' '\n' | egrep '20_005_Paramecynostomum_diversicolor|SRR8617822_Neochildia_fusca|P15761_117_Philactinoposthia_rhammifera|SRR6374833_Aphanostoma_pulchra' | tr ' ' '\n' > 53/${i}
    tr '\n' ' ' < $i | sed 's/\ >/\,>/g' | tr ',' '\n' | egrep '20_005_Paramecynostomum_diversicolor|SRR8617822_Neochildia_fusca|20_023_Notocelis_gullmarensis|SRR6374833_Aphanostoma_pulchra' | tr ' ' '\n' > 54/${i}
    tr '\n' ' ' < $i | sed 's/\ >/\,>/g' | tr ',' '\n' | egrep '20_005_Paramecynostomum_diversicolor|SRR2681679_Convolutriloba_macropyga|20_132_Philocelis_karlingi|SRR6374833_Aphanostoma_pulchra' | tr ' ' '\n' > 55/${i}
    tr '\n' ' ' < $i | sed 's/\ >/\,>/g' | tr ',' '\n' | egrep '20_005_Paramecynostomum_diversicolor|SRR2681679_Convolutriloba_macropyga|P15761_117_Philactinoposthia_rhammifera|SRR6374833_Aphanostoma_pulchra' | tr ' ' '\n' > 56/${i}
    tr '\n' ' ' < $i | sed 's/\ >/\,>/g' | tr ',' '\n' | egrep '20_005_Paramecynostomum_diversicolor|SRR2681679_Convolutriloba_macropyga|20_023_Notocelis_gullmarensis|SRR6374833_Aphanostoma_pulchra' | tr ' ' '\n' > 57/${i}
    tr '\n' ' ' < $i | sed 's/\ >/\,>/g' | tr ',' '\n' | egrep '20_005_Paramecynostomum_diversicolor|DRR151142_Praesagittifera_naikaiensis|20_132_Philocelis_karlingi|SRR6374833_Aphanostoma_pulchra' | tr ' ' '\n' > 58/${i}
    tr '\n' ' ' < $i | sed 's/\ >/\,>/g' | tr ',' '\n' | egrep '20_005_Paramecynostomum_diversicolor|DRR151142_Praesagittifera_naikaiensis|P15761_117_Philactinoposthia_rhammifera|SRR6374833_Aphanostoma_pulchra' | tr ' ' '\n' > 59/${i}
    tr '\n' ' ' < $i | sed 's/\ >/\,>/g' | tr ',' '\n' | egrep '20_005_Paramecynostomum_diversicolor|DRR151142_Praesagittifera_naikaiensis|20_023_Notocelis_gullmarensis|SRR6374833_Aphanostoma_pulchra' | tr ' ' '\n' > 60/${i}
	tr '\n' ' ' < $i | sed 's/\ >/\,>/g' | tr ',' '\n' | egrep '20_082_Haploposthia_lactomaculata|DRR151142_Praesagittifera_naikaiensis|20_132_Philocelis_karlingi|SRR6374833_Aphanostoma_pulchra'  | tr ' ' '\n' > 61/${i}
    tr '\n' ' ' < $i | sed 's/\ >/\,>/g' | tr ',' '\n' | egrep '20_082_Haploposthia_lactomaculata|DRR151142_Praesagittifera_naikaiensis|P15761_117_Philactinoposthia_rhammifera|SRR6374833_Aphanostoma_pulchra'  | tr ' ' '\n' > 62/${i}
    tr '\n' ' ' < $i | sed 's/\ >/\,>/g' | tr ',' '\n' | egrep '20_082_Haploposthia_lactomaculata|DRR151142_Praesagittifera_naikaiensis|20_023_Notocelis_gullmarensis|SRR6374833_Aphanostoma_pulchra'  | tr ' ' '\n' > 63/${i}
    tr '\n' ' ' < $i | sed 's/\ >/\,>/g' | tr ',' '\n' | egrep '20_082_Haploposthia_lactomaculata|P15761_125_Anaperus_rubellus|20_132_Philocelis_karlingi|SRR6374833_Aphanostoma_pulchra'  | tr ' ' '\n' > 64/${i}
    tr '\n' ' ' < $i | sed 's/\ >/\,>/g' | tr ',' '\n' | egrep '20_082_Haploposthia_lactomaculata|P15761_125_Anaperus_rubellus|P15761_117_Philactinoposthia_rhammifera|SRR6374833_Aphanostoma_pulchra'  | tr ' ' '\n' > 65/${i}
    tr '\n' ' ' < $i | sed 's/\ >/\,>/g' | tr ',' '\n' | egrep '20_082_Haploposthia_lactomaculata|P15761_125_Anaperus_rubellus|20_023_Notocelis_gullmarensis|SRR6374833_Aphanostoma_pulchra'  | tr ' ' '\n' > 66/${i}
    tr '\n' ' ' < $i | sed 's/\ >/\,>/g' | tr ',' '\n' | egrep '20_082_Haploposthia_lactomaculata|P15761_141_Anaperus_tvaerminnensis|20_132_Philocelis_karlingi|SRR6374833_Aphanostoma_pulchra'  | tr ' ' '\n' > 67/${i}
    tr '\n' ' ' < $i | sed 's/\ >/\,>/g' | tr ',' '\n' | egrep '20_082_Haploposthia_lactomaculata|P15761_141_Anaperus_tvaerminnensis|P15761_117_Philactinoposthia_rhammifera|SRR6374833_Aphanostoma_pulchra'  | tr ' ' '\n' > 68/${i}
    tr '\n' ' ' < $i | sed 's/\ >/\,>/g' | tr ',' '\n' | egrep '20_082_Haploposthia_lactomaculata|P15761_141_Anaperus_tvaerminnensis|20_023_Notocelis_gullmarensis|SRR6374833_Aphanostoma_pulchra'  | tr ' ' '\n' > 69/${i}
    tr '\n' ' ' < $i | sed 's/\ >/\,>/g' | tr ',' '\n' | egrep '20_082_Haploposthia_lactomaculata|SRR2681679_Convolutriloba_macropyga|20_132_Philocelis_karlingi|SRR6374833_Aphanostoma_pulchra'  | tr ' ' '\n' > 70/${i}
    tr '\n' ' ' < $i | sed 's/\ >/\,>/g' | tr ',' '\n' | egrep '20_082_Haploposthia_lactomaculata|SRR2681679_Convolutriloba_macropyga|P15761_117_Philactinoposthia_rhammifera|SRR6374833_Aphanostoma_pulchra'  | tr ' ' '\n' > 71/${i}
    tr '\n' ' ' < $i | sed 's/\ >/\,>/g' | tr ',' '\n' | egrep '20_082_Haploposthia_lactomaculata|SRR2681679_Convolutriloba_macropyga|20_023_Notocelis_gullmarensis|SRR6374833_Aphanostoma_pulchra'  | tr ' ' '\n' > 72/${i}
    tr '\n' ' ' < $i | sed 's/\ >/\,>/g' | tr ',' '\n' | egrep '20_082_Haploposthia_lactomaculata|SRR8617822_Neochildia_fusca|20_132_Philocelis_karlingi|SRR6374833_Aphanostoma_pulchra'  | tr ' ' '\n' > 73/${i}
    tr '\n' ' ' < $i | sed 's/\ >/\,>/g' | tr ',' '\n' | egrep '20_082_Haploposthia_lactomaculata|SRR8617822_Neochildia_fusca|P15761_117_Philactinoposthia_rhammifera|SRR6374833_Aphanostoma_pulchra'  | tr ' ' '\n' > 74/${i}
    tr '\n' ' ' < $i | sed 's/\ >/\,>/g' | tr ',' '\n' | egrep '20_082_Haploposthia_lactomaculata|SRR8617822_Neochildia_fusca|20_023_Notocelis_gullmarensis|SRR6374833_Aphanostoma_pulchra'  | tr ' ' '\n' > 75/${i}
done

for i in */*fasta
    do
	seqs=$( grep -c '>' ${i} )
	if [ $seqs -lt 4 ]; then
	    rm ${i}
	fi
done

rm *fasta

cd 01/
for i in $( ls ../* | grep ':' | sed 's/\://g' )
    do
	cd $i
	mkdir Supermatrix Gene_trees
	
	for gene in *fasta
	    do
		mafft-linsi ${gene} > Supermatrix/${gene}.fas
		cp Supermatrix/${gene}.fas Gene_trees/
    done
	
	cd Supermatrix/
	perl /home/saabalde/Escritorio/software/FASconCAT-G/FASconCAT-G_v1.05.pl -l -s > FASconCat.log
	rm *fasta.fas

    cd ../	
done

## Make genetrees just in case we need them for other analyses
cd ../
for i in */Gene_trees/*fas
    do
	iqtree -s $i -m MFP -AICc -nt AUTO -bb 1000
	rm $i
done

for i in */Gene_trees/*fas
    do
	iqtree -s $i -m MFP -AICc -nt AUTO -bb 1000
	rm $i
done

## Now that we have all supermatrices, we can put them all together in the same directory

for i in $( ls * | grep ':' | sed 's/\://g' )
    do
	cp ${i}/Supermatrix/FcC_supermatrix.fas ./FcC_supermatrix.${i}.fas
done

## Now we are ready to analyse all these matrices to find signatures of introgression. I will use the "D-statistic.R" script again. However,
## I need to modify these matrices to sort the sequences: Mecynostomidae, Convolutidae, Dakuidae, Outgroup.

## A lot of the analyses have returned signatures of positive selection, mostly between Dakuidae and Mecynostomidae. However, I want to make
## sure this is not an artifact. I am going to test also different species throughout the tree (selected based on completeness), to see if
## they are also "hybridizing" with Mecynostomidae and Convolutidae. If so, then I cannot trust these results.
## The species selected are:
##     1) SRR3105705.Eumecynostomum_macrobursalium, 20_078.Aphanostoma_virescens         | Outgroup: SRR6374833.Aphanostoma_pulchra
##     2) SRR6374833.Aphanostoma_pulchra, 20_093.Haploposthia_rubropunctata              | Outgroup: SRR3105703.Diopisthoporus_gymnopharyngeus
##     3) SRR3105703.Diopisthoporus_gymnopharyngeus                                      | Outgroup: SRR2681155.Meara_stichopi

## Accounting for these and all the species in Mecynostomidae and Convolutidae, there are up to 125 combinations of species.

cd ../
mkdir 08-Genes_New_NoDakuidae
cp ../36-Fulldataset_Plus_Notocelis/* 08-Genes_New_NoDakuidae/

cd 08-Genes_New_NoDakuidae/
mkdir 001 002 003 004 005 006 007 008 009 010 011 012 013 014 015 016 017 018 019 020 021 022 023 024 025 026 027 028 029 030 031 032 033 034 \
      035 036 037 038 039 040 041 042 043 044 045 046 047 048 049 050 051 052 053 054 055 056 057 058 059 060 061 062 063 064 065 066 067 068 \
	  069 070 071 072 073 074 075 076 077 078 079 080 081 082 083 084 085 086 087 088 089 090 091 092 093 094 095 096 097 098 099 100 101 102 \
	  103 104 105 106 107 108 109 110 111 112 113 114 115 116 117 118 119 120 121 122 123 124 125

for i in *fas
    do
    mv -- "$i" "${i%_pruned.fasta.filtered.mafft.fas}_pruned.fasta"
done

for i in *fasta
    do
	sed -i '/>/ s/\./\_/g' $i
done

for i in *fasta
    do
	seq1=$( egrep -c '20_005_Paramecynostomum_diversicolor|20_082_Haploposthia_lactomaculata|20_115_Childia_crassum|P15761_110_Childia_vivipara|SRR3105702_Childia_submaculatum|DRR151142_Praesagittifera_naikaiensis|P15761_125_Anaperus_rubellus|P15761_141_Anaperus_tvaerminnensis|SRR2681679_Convolutriloba_macropyga|SRR8617822_Neochildia_fusca|20_078_Aphanostoma_virescens|SRR3105705_Eumecynostomum_macrobursalium|SRR6374833_Aphanostoma_pulchra' $i )
	seq2=$( egrep -c '20_005_Paramecynostomum_diversicolor|20_082_Haploposthia_lactomaculata|20_115_Childia_crassum|P15761_110_Childia_vivipara|SRR3105702_Childia_submaculatum|DRR151142_Praesagittifera_naikaiensis|P15761_125_Anaperus_rubellus|P15761_141_Anaperus_tvaerminnensis|SRR2681679_Convolutriloba_macropyga|SRR8617822_Neochildia_fusca|20_093_Haploposthia_rubropunctata|SRR6374833_Aphanostoma_pulchra|SRR3105703_Diopisthoporus_gymnopharyngeus' $i )
	seq3=$( egrep -c '20_005_Paramecynostomum_diversicolor|20_082_Haploposthia_lactomaculata|20_115_Childia_crassum|P15761_110_Childia_vivipara|SRR3105702_Childia_submaculatum|DRR151142_Praesagittifera_naikaiensis|P15761_125_Anaperus_rubellus|P15761_141_Anaperus_tvaerminnensis|SRR2681679_Convolutriloba_macropyga|SRR8617822_Neochildia_fusca|SRR3105703_Diopisthoporus_gymnopharyngeus|SRR2681155_Meara_stichopi' $i )

	if [ $seq1 -lt 1 ] || [ $seq2 -lt 1 ] || [ $seq3 -lt 1 ]; then
	    rm $3
	fi
done

for i in *fasta
    do
    tr '\n' ' ' < $i | sed 's/\ >/\,>/g' | tr ',' '\n' | egrep '20_005_Paramecynostomum_diversicolor|DRR151142_Praesagittifera_naikaiensis|SRR3105705_Eumecynostomum_macrobursalium|SRR6374833_Aphanostoma_pulchra'  | tr ' ' '\n' > 001/${i}
    tr '\n' ' ' < $i | sed 's/\ >/\,>/g' | tr ',' '\n' | egrep '20_005_Paramecynostomum_diversicolor|DRR151142_Praesagittifera_naikaiensis|20_078_Aphanostoma_virescens|SRR6374833_Aphanostoma_pulchra'  | tr ' ' '\n' > 002/${i}
    tr '\n' ' ' < $i | sed 's/\ >/\,>/g' | tr ',' '\n' | egrep '20_005_Paramecynostomum_diversicolor|P15761_125_Anaperus_rubellus|SRR3105705_Eumecynostomum_macrobursalium|SRR6374833_Aphanostoma_pulchra'  | tr ' ' '\n' > 003/${i}
    tr '\n' ' ' < $i | sed 's/\ >/\,>/g' | tr ',' '\n' | egrep '20_005_Paramecynostomum_diversicolor|P15761_125_Anaperus_rubellus|20_078_Aphanostoma_virescens|SRR6374833_Aphanostoma_pulchra'  | tr ' ' '\n' > 004/${i}
    tr '\n' ' ' < $i | sed 's/\ >/\,>/g' | tr ',' '\n' | egrep '20_005_Paramecynostomum_diversicolor|P15761_141_Anaperus_tvaerminnensis|SRR3105705_Eumecynostomum_macrobursalium|SRR6374833_Aphanostoma_pulchra'  | tr ' ' '\n' > 005/${i}
    tr '\n' ' ' < $i | sed 's/\ >/\,>/g' | tr ',' '\n' | egrep '20_005_Paramecynostomum_diversicolor|P15761_141_Anaperus_tvaerminnensis|20_078_Aphanostoma_virescens|SRR6374833_Aphanostoma_pulchra'  | tr ' ' '\n' > 006/${i}
    tr '\n' ' ' < $i | sed 's/\ >/\,>/g' | tr ',' '\n' | egrep '20_005_Paramecynostomum_diversicolor|SRR2681679_Convolutriloba_macropyga|SRR3105705_Eumecynostomum_macrobursalium|SRR6374833_Aphanostoma_pulchra'  | tr ' ' '\n' > 007/${i}
    tr '\n' ' ' < $i | sed 's/\ >/\,>/g' | tr ',' '\n' | egrep '20_005_Paramecynostomum_diversicolor|SRR2681679_Convolutriloba_macropyga|20_078_Aphanostoma_virescens|SRR6374833_Aphanostoma_pulchra'  | tr ' ' '\n' > 008/${i}
    tr '\n' ' ' < $i | sed 's/\ >/\,>/g' | tr ',' '\n' | egrep '20_005_Paramecynostomum_diversicolor|SRR8617822_Neochildia_fusca|SRR3105705_Eumecynostomum_macrobursalium|SRR6374833_Aphanostoma_pulchra'  | tr ' ' '\n' > 009/${i}
    tr '\n' ' ' < $i | sed 's/\ >/\,>/g' | tr ',' '\n' | egrep '20_005_Paramecynostomum_diversicolor|SRR8617822_Neochildia_fusca|20_078_Aphanostoma_virescens|SRR6374833_Aphanostoma_pulchra'  | tr ' ' '\n' > 010/${i}
    tr '\n' ' ' < $i | sed 's/\ >/\,>/g' | tr ',' '\n' | egrep '20_082_Haploposthia_lactomaculata|DRR151142_Praesagittifera_naikaiensis|SRR3105705_Eumecynostomum_macrobursalium|SRR6374833_Aphanostoma_pulchra'  | tr ' ' '\n' > 011/${i}
    tr '\n' ' ' < $i | sed 's/\ >/\,>/g' | tr ',' '\n' | egrep '20_082_Haploposthia_lactomaculata|DRR151142_Praesagittifera_naikaiensis|20_078_Aphanostoma_virescens|SRR6374833_Aphanostoma_pulchra'  | tr ' ' '\n' > 012/${i}
    tr '\n' ' ' < $i | sed 's/\ >/\,>/g' | tr ',' '\n' | egrep '20_082_Haploposthia_lactomaculata|P15761_125_Anaperus_rubellus|SRR3105705_Eumecynostomum_macrobursalium|SRR6374833_Aphanostoma_pulchra'  | tr ' ' '\n' > 013/${i}
    tr '\n' ' ' < $i | sed 's/\ >/\,>/g' | tr ',' '\n' | egrep '20_082_Haploposthia_lactomaculata|P15761_125_Anaperus_rubellus|20_078_Aphanostoma_virescens|SRR6374833_Aphanostoma_pulchra'  | tr ' ' '\n' > 014/${i}
    tr '\n' ' ' < $i | sed 's/\ >/\,>/g' | tr ',' '\n' | egrep '20_082_Haploposthia_lactomaculata|P15761_141_Anaperus_tvaerminnensis|SRR3105705_Eumecynostomum_macrobursalium|SRR6374833_Aphanostoma_pulchra'  | tr ' ' '\n' > 015/${i}
    tr '\n' ' ' < $i | sed 's/\ >/\,>/g' | tr ',' '\n' | egrep '20_082_Haploposthia_lactomaculata|P15761_141_Anaperus_tvaerminnensis|20_078_Aphanostoma_virescens|SRR6374833_Aphanostoma_pulchra'  | tr ' ' '\n' > 016/${i}
    tr '\n' ' ' < $i | sed 's/\ >/\,>/g' | tr ',' '\n' | egrep '20_082_Haploposthia_lactomaculata|SRR2681679_Convolutriloba_macropyga|SRR3105705_Eumecynostomum_macrobursalium|SRR6374833_Aphanostoma_pulchra'  | tr ' ' '\n' > 017/${i}
    tr '\n' ' ' < $i | sed 's/\ >/\,>/g' | tr ',' '\n' | egrep '20_082_Haploposthia_lactomaculata|SRR2681679_Convolutriloba_macropyga|20_078_Aphanostoma_virescens|SRR6374833_Aphanostoma_pulchra'  | tr ' ' '\n' > 018/${i}
    tr '\n' ' ' < $i | sed 's/\ >/\,>/g' | tr ',' '\n' | egrep '20_082_Haploposthia_lactomaculata|SRR8617822_Neochildia_fusca|SRR3105705_Eumecynostomum_macrobursalium|SRR6374833_Aphanostoma_pulchra'  | tr ' ' '\n' > 019/${i}
    tr '\n' ' ' < $i | sed 's/\ >/\,>/g' | tr ',' '\n' | egrep '20_082_Haploposthia_lactomaculata|SRR8617822_Neochildia_fusca|20_078_Aphanostoma_virescens|SRR6374833_Aphanostoma_pulchra'  | tr ' ' '\n' > 020/${i}
    tr '\n' ' ' < $i | sed 's/\ >/\,>/g' | tr ',' '\n' | egrep '20_115_Childia_crassum|DRR151142_Praesagittifera_naikaiensis|SRR3105705_Eumecynostomum_macrobursalium|SRR6374833_Aphanostoma_pulchra'  | tr ' ' '\n' > 021/${i}
    tr '\n' ' ' < $i | sed 's/\ >/\,>/g' | tr ',' '\n' | egrep '20_115_Childia_crassum|DRR151142_Praesagittifera_naikaiensis|20_078_Aphanostoma_virescens|SRR6374833_Aphanostoma_pulchra'  | tr ' ' '\n' > 022/${i}
    tr '\n' ' ' < $i | sed 's/\ >/\,>/g' | tr ',' '\n' | egrep '20_115_Childia_crassum|P15761_125_Anaperus_rubellus|SRR3105705_Eumecynostomum_macrobursalium|SRR6374833_Aphanostoma_pulchra'  | tr ' ' '\n' > 023/${i}
    tr '\n' ' ' < $i | sed 's/\ >/\,>/g' | tr ',' '\n' | egrep '20_115_Childia_crassum|P15761_125_Anaperus_rubellus|20_078_Aphanostoma_virescens|SRR6374833_Aphanostoma_pulchra'  | tr ' ' '\n' > 024/${i}
    tr '\n' ' ' < $i | sed 's/\ >/\,>/g' | tr ',' '\n' | egrep '20_115_Childia_crassum|P15761_141_Anaperus_tvaerminnensis|SRR3105705_Eumecynostomum_macrobursalium|SRR6374833_Aphanostoma_pulchra'  | tr ' ' '\n' > 025/${i}
    tr '\n' ' ' < $i | sed 's/\ >/\,>/g' | tr ',' '\n' | egrep '20_115_Childia_crassum|P15761_141_Anaperus_tvaerminnensis|20_078_Aphanostoma_virescens|SRR6374833_Aphanostoma_pulchra'  | tr ' ' '\n' > 026/${i}
    tr '\n' ' ' < $i | sed 's/\ >/\,>/g' | tr ',' '\n' | egrep '20_115_Childia_crassum|SRR2681679_Convolutriloba_macropyga|SRR3105705_Eumecynostomum_macrobursalium|SRR6374833_Aphanostoma_pulchra'  | tr ' ' '\n' > 027/${i}
    tr '\n' ' ' < $i | sed 's/\ >/\,>/g' | tr ',' '\n' | egrep '20_115_Childia_crassum|SRR2681679_Convolutriloba_macropyga|20_078_Aphanostoma_virescens|SRR6374833_Aphanostoma_pulchra'  | tr ' ' '\n' > 028/${i}
    tr '\n' ' ' < $i | sed 's/\ >/\,>/g' | tr ',' '\n' | egrep '20_115_Childia_crassum|SRR8617822_Neochildia_fusca|SRR3105705_Eumecynostomum_macrobursalium|SRR6374833_Aphanostoma_pulchra'  | tr ' ' '\n' > 029/${i}
    tr '\n' ' ' < $i | sed 's/\ >/\,>/g' | tr ',' '\n' | egrep '20_115_Childia_crassum|SRR8617822_Neochildia_fusca|20_078_Aphanostoma_virescens|SRR6374833_Aphanostoma_pulchra'  | tr ' ' '\n' > 030/${i}
    tr '\n' ' ' < $i | sed 's/\ >/\,>/g' | tr ',' '\n' | egrep 'P15761_110_Childia_vivipara|DRR151142_Praesagittifera_naikaiensis|SRR3105705_Eumecynostomum_macrobursalium|SRR6374833_Aphanostoma_pulchra'  | tr ' ' '\n' > 031/${i}
    tr '\n' ' ' < $i | sed 's/\ >/\,>/g' | tr ',' '\n' | egrep 'P15761_110_Childia_vivipara|DRR151142_Praesagittifera_naikaiensis|20_078_Aphanostoma_virescens|SRR6374833_Aphanostoma_pulchra'  | tr ' ' '\n' > 032/${i}
    tr '\n' ' ' < $i | sed 's/\ >/\,>/g' | tr ',' '\n' | egrep 'P15761_110_Childia_vivipara|P15761_125_Anaperus_rubellus|SRR3105705_Eumecynostomum_macrobursalium|SRR6374833_Aphanostoma_pulchra'  | tr ' ' '\n' > 033/${i}
    tr '\n' ' ' < $i | sed 's/\ >/\,>/g' | tr ',' '\n' | egrep 'P15761_110_Childia_vivipara|P15761_125_Anaperus_rubellus|20_078_Aphanostoma_virescens|SRR6374833_Aphanostoma_pulchra'  | tr ' ' '\n' > 034/${i}
    tr '\n' ' ' < $i | sed 's/\ >/\,>/g' | tr ',' '\n' | egrep 'P15761_110_Childia_vivipara|P15761_141_Anaperus_tvaerminnensis|SRR3105705_Eumecynostomum_macrobursalium|SRR6374833_Aphanostoma_pulchra'  | tr ' ' '\n' > 035/${i}
    tr '\n' ' ' < $i | sed 's/\ >/\,>/g' | tr ',' '\n' | egrep 'P15761_110_Childia_vivipara|P15761_141_Anaperus_tvaerminnensis|20_078_Aphanostoma_virescens|SRR6374833_Aphanostoma_pulchra'  | tr ' ' '\n' > 036/${i}
    tr '\n' ' ' < $i | sed 's/\ >/\,>/g' | tr ',' '\n' | egrep 'P15761_110_Childia_vivipara|SRR2681679_Convolutriloba_macropyga|SRR3105705_Eumecynostomum_macrobursalium|SRR6374833_Aphanostoma_pulchra'  | tr ' ' '\n' > 037/${i}
    tr '\n' ' ' < $i | sed 's/\ >/\,>/g' | tr ',' '\n' | egrep 'P15761_110_Childia_vivipara|SRR2681679_Convolutriloba_macropyga|20_078_Aphanostoma_virescens|SRR6374833_Aphanostoma_pulchra'  | tr ' ' '\n' > 038/${i}
    tr '\n' ' ' < $i | sed 's/\ >/\,>/g' | tr ',' '\n' | egrep 'P15761_110_Childia_vivipara|SRR8617822_Neochildia_fusca|SRR3105705_Eumecynostomum_macrobursalium|SRR6374833_Aphanostoma_pulchra'  | tr ' ' '\n' > 039/${i}
    tr '\n' ' ' < $i | sed 's/\ >/\,>/g' | tr ',' '\n' | egrep 'P15761_110_Childia_vivipara|SRR8617822_Neochildia_fusca|20_078_Aphanostoma_virescens|SRR6374833_Aphanostoma_pulchra'  | tr ' ' '\n' > 040/${i}
    tr '\n' ' ' < $i | sed 's/\ >/\,>/g' | tr ',' '\n' | egrep 'SRR3105702_Childia_submaculatum|DRR151142_Praesagittifera_naikaiensis|SRR3105705_Eumecynostomum_macrobursalium|SRR6374833_Aphanostoma_pulchra'  | tr ' ' '\n' > 041/${i}
    tr '\n' ' ' < $i | sed 's/\ >/\,>/g' | tr ',' '\n' | egrep 'SRR3105702_Childia_submaculatum|DRR151142_Praesagittifera_naikaiensis|20_078_Aphanostoma_virescens|SRR6374833_Aphanostoma_pulchra'  | tr ' ' '\n' > 042/${i}
    tr '\n' ' ' < $i | sed 's/\ >/\,>/g' | tr ',' '\n' | egrep 'SRR3105702_Childia_submaculatum|P15761_125_Anaperus_rubellus|SRR3105705_Eumecynostomum_macrobursalium|SRR6374833_Aphanostoma_pulchra'  | tr ' ' '\n' > 043/${i}
    tr '\n' ' ' < $i | sed 's/\ >/\,>/g' | tr ',' '\n' | egrep 'SRR3105702_Childia_submaculatum|P15761_125_Anaperus_rubellus|20_078_Aphanostoma_virescens|SRR6374833_Aphanostoma_pulchra'  | tr ' ' '\n' > 044/${i}
    tr '\n' ' ' < $i | sed 's/\ >/\,>/g' | tr ',' '\n' | egrep 'SRR3105702_Childia_submaculatum|P15761_141_Anaperus_tvaerminnensis|SRR3105705_Eumecynostomum_macrobursalium|SRR6374833_Aphanostoma_pulchra'  | tr ' ' '\n' > 045/${i}
    tr '\n' ' ' < $i | sed 's/\ >/\,>/g' | tr ',' '\n' | egrep 'SRR3105702_Childia_submaculatum|P15761_141_Anaperus_tvaerminnensis|20_078_Aphanostoma_virescens|SRR6374833_Aphanostoma_pulchra'  | tr ' ' '\n' > 046/${i}
    tr '\n' ' ' < $i | sed 's/\ >/\,>/g' | tr ',' '\n' | egrep 'SRR3105702_Childia_submaculatum|SRR2681679_Convolutriloba_macropyga|SRR3105705_Eumecynostomum_macrobursalium|SRR6374833_Aphanostoma_pulchra'  | tr ' ' '\n' > 047/${i}
    tr '\n' ' ' < $i | sed 's/\ >/\,>/g' | tr ',' '\n' | egrep 'SRR3105702_Childia_submaculatum|SRR2681679_Convolutriloba_macropyga|20_078_Aphanostoma_virescens|SRR6374833_Aphanostoma_pulchra'  | tr ' ' '\n' > 048/${i}
    tr '\n' ' ' < $i | sed 's/\ >/\,>/g' | tr ',' '\n' | egrep 'SRR3105702_Childia_submaculatum|SRR8617822_Neochildia_fusca|SRR3105705_Eumecynostomum_macrobursalium|SRR6374833_Aphanostoma_pulchra'  | tr ' ' '\n' > 049/${i}
    tr '\n' ' ' < $i | sed 's/\ >/\,>/g' | tr ',' '\n' | egrep 'SRR3105702_Childia_submaculatum|SRR8617822_Neochildia_fusca|20_078_Aphanostoma_virescens|SRR6374833_Aphanostoma_pulchra'  | tr ' ' '\n' > 050/${i}
    tr '\n' ' ' < $i | sed 's/\ >/\,>/g' | tr ',' '\n' | egrep '20_005_Paramecynostomum_diversicolor|DRR151142_Praesagittifera_naikaiensis|SRR6374833_Aphanostoma_pulchra|SRR3105703_Diopisthoporus_gymnopharyngeus'  | tr ' ' '\n' > 051/${i}
    tr '\n' ' ' < $i | sed 's/\ >/\,>/g' | tr ',' '\n' | egrep '20_005_Paramecynostomum_diversicolor|DRR151142_Praesagittifera_naikaiensis|20_093_Haploposthia_rubropunctata|SRR3105703_Diopisthoporus_gymnopharyngeus'  | tr ' ' '\n' > 052/${i}
    tr '\n' ' ' < $i | sed 's/\ >/\,>/g' | tr ',' '\n' | egrep '20_005_Paramecynostomum_diversicolor|P15761_125_Anaperus_rubellus|SRR6374833_Aphanostoma_pulchra|SRR3105703_Diopisthoporus_gymnopharyngeus'  | tr ' ' '\n' > 053/${i}
    tr '\n' ' ' < $i | sed 's/\ >/\,>/g' | tr ',' '\n' | egrep '20_005_Paramecynostomum_diversicolor|P15761_125_Anaperus_rubellus|20_093_Haploposthia_rubropunctata|SRR3105703_Diopisthoporus_gymnopharyngeus'  | tr ' ' '\n' > 054/${i}
    tr '\n' ' ' < $i | sed 's/\ >/\,>/g' | tr ',' '\n' | egrep '20_005_Paramecynostomum_diversicolor|P15761_141_Anaperus_tvaerminnensis|SRR6374833_Aphanostoma_pulchra|SRR3105703_Diopisthoporus_gymnopharyngeus'  | tr ' ' '\n' > 055/${i}
    tr '\n' ' ' < $i | sed 's/\ >/\,>/g' | tr ',' '\n' | egrep '20_005_Paramecynostomum_diversicolor|P15761_141_Anaperus_tvaerminnensis|20_093_Haploposthia_rubropunctata|SRR3105703_Diopisthoporus_gymnopharyngeus'  | tr ' ' '\n' > 056/${i}
    tr '\n' ' ' < $i | sed 's/\ >/\,>/g' | tr ',' '\n' | egrep '20_005_Paramecynostomum_diversicolor|SRR2681679_Convolutriloba_macropyga|SRR6374833_Aphanostoma_pulchra|SRR3105703_Diopisthoporus_gymnopharyngeus'  | tr ' ' '\n' > 057/${i}
    tr '\n' ' ' < $i | sed 's/\ >/\,>/g' | tr ',' '\n' | egrep '20_005_Paramecynostomum_diversicolor|SRR2681679_Convolutriloba_macropyga|20_093_Haploposthia_rubropunctata|SRR3105703_Diopisthoporus_gymnopharyngeus'  | tr ' ' '\n' > 058/${i}
    tr '\n' ' ' < $i | sed 's/\ >/\,>/g' | tr ',' '\n' | egrep '20_005_Paramecynostomum_diversicolor|SRR8617822_Neochildia_fusca|SRR6374833_Aphanostoma_pulchra|SRR3105703_Diopisthoporus_gymnopharyngeus'  | tr ' ' '\n' > 059/${i}
    tr '\n' ' ' < $i | sed 's/\ >/\,>/g' | tr ',' '\n' | egrep '20_005_Paramecynostomum_diversicolor|SRR8617822_Neochildia_fusca|20_093_Haploposthia_rubropunctata|SRR3105703_Diopisthoporus_gymnopharyngeus'  | tr ' ' '\n' > 060/${i}
    tr '\n' ' ' < $i | sed 's/\ >/\,>/g' | tr ',' '\n' | egrep '20_082_Haploposthia_lactomaculata|DRR151142_Praesagittifera_naikaiensis|SRR6374833_Aphanostoma_pulchra|SRR3105703_Diopisthoporus_gymnopharyngeus'  | tr ' ' '\n' > 061/${i}
    tr '\n' ' ' < $i | sed 's/\ >/\,>/g' | tr ',' '\n' | egrep '20_082_Haploposthia_lactomaculata|DRR151142_Praesagittifera_naikaiensis|20_093_Haploposthia_rubropunctata|SRR3105703_Diopisthoporus_gymnopharyngeus'  | tr ' ' '\n' > 062/${i}
    tr '\n' ' ' < $i | sed 's/\ >/\,>/g' | tr ',' '\n' | egrep '20_082_Haploposthia_lactomaculata|P15761_125_Anaperus_rubellus|SRR6374833_Aphanostoma_pulchra|SRR3105703_Diopisthoporus_gymnopharyngeus'  | tr ' ' '\n' > 063/${i}
    tr '\n' ' ' < $i | sed 's/\ >/\,>/g' | tr ',' '\n' | egrep '20_082_Haploposthia_lactomaculata|P15761_125_Anaperus_rubellus|20_093_Haploposthia_rubropunctata|SRR3105703_Diopisthoporus_gymnopharyngeus'  | tr ' ' '\n' > 064/${i}
    tr '\n' ' ' < $i | sed 's/\ >/\,>/g' | tr ',' '\n' | egrep '20_082_Haploposthia_lactomaculata|P15761_141_Anaperus_tvaerminnensis|SRR6374833_Aphanostoma_pulchra|SRR3105703_Diopisthoporus_gymnopharyngeus'  | tr ' ' '\n' > 065/${i}
    tr '\n' ' ' < $i | sed 's/\ >/\,>/g' | tr ',' '\n' | egrep '20_082_Haploposthia_lactomaculata|P15761_141_Anaperus_tvaerminnensis|20_093_Haploposthia_rubropunctata|SRR3105703_Diopisthoporus_gymnopharyngeus'  | tr ' ' '\n' > 066/${i}
    tr '\n' ' ' < $i | sed 's/\ >/\,>/g' | tr ',' '\n' | egrep '20_082_Haploposthia_lactomaculata|SRR2681679_Convolutriloba_macropyga|SRR6374833_Aphanostoma_pulchra|SRR3105703_Diopisthoporus_gymnopharyngeus'  | tr ' ' '\n' > 067/${i}
    tr '\n' ' ' < $i | sed 's/\ >/\,>/g' | tr ',' '\n' | egrep '20_082_Haploposthia_lactomaculata|SRR2681679_Convolutriloba_macropyga|20_093_Haploposthia_rubropunctata|SRR3105703_Diopisthoporus_gymnopharyngeus'  | tr ' ' '\n' > 068/${i}
    tr '\n' ' ' < $i | sed 's/\ >/\,>/g' | tr ',' '\n' | egrep '20_082_Haploposthia_lactomaculata|SRR8617822_Neochildia_fusca|SRR6374833_Aphanostoma_pulchra|SRR3105703_Diopisthoporus_gymnopharyngeus'  | tr ' ' '\n' > 069/${i}
    tr '\n' ' ' < $i | sed 's/\ >/\,>/g' | tr ',' '\n' | egrep '20_082_Haploposthia_lactomaculata|SRR8617822_Neochildia_fusca|20_093_Haploposthia_rubropunctata|SRR3105703_Diopisthoporus_gymnopharyngeus'  | tr ' ' '\n' > 070/${i}
    tr '\n' ' ' < $i | sed 's/\ >/\,>/g' | tr ',' '\n' | egrep '20_115_Childia_crassum|DRR151142_Praesagittifera_naikaiensis|SRR6374833_Aphanostoma_pulchra|SRR3105703_Diopisthoporus_gymnopharyngeus'  | tr ' ' '\n' > 071/${i}
    tr '\n' ' ' < $i | sed 's/\ >/\,>/g' | tr ',' '\n' | egrep '20_115_Childia_crassum|DRR151142_Praesagittifera_naikaiensis|20_093_Haploposthia_rubropunctata|SRR3105703_Diopisthoporus_gymnopharyngeus'  | tr ' ' '\n' > 072/${i}
    tr '\n' ' ' < $i | sed 's/\ >/\,>/g' | tr ',' '\n' | egrep '20_115_Childia_crassum|P15761_125_Anaperus_rubellus|SRR6374833_Aphanostoma_pulchra|SRR3105703_Diopisthoporus_gymnopharyngeus'  | tr ' ' '\n' > 073/${i}
    tr '\n' ' ' < $i | sed 's/\ >/\,>/g' | tr ',' '\n' | egrep '20_115_Childia_crassum|P15761_125_Anaperus_rubellus|20_093_Haploposthia_rubropunctata|SRR3105703_Diopisthoporus_gymnopharyngeus'  | tr ' ' '\n' > 074/${i}
    tr '\n' ' ' < $i | sed 's/\ >/\,>/g' | tr ',' '\n' | egrep '20_115_Childia_crassum|P15761_141_Anaperus_tvaerminnensis|SRR6374833_Aphanostoma_pulchra|SRR3105703_Diopisthoporus_gymnopharyngeus'  | tr ' ' '\n' > 075/${i}
    tr '\n' ' ' < $i | sed 's/\ >/\,>/g' | tr ',' '\n' | egrep '20_115_Childia_crassum|P15761_141_Anaperus_tvaerminnensis|20_093_Haploposthia_rubropunctata|SRR3105703_Diopisthoporus_gymnopharyngeus'  | tr ' ' '\n' > 076/${i}
    tr '\n' ' ' < $i | sed 's/\ >/\,>/g' | tr ',' '\n' | egrep '20_115_Childia_crassum|SRR2681679_Convolutriloba_macropyga|SRR6374833_Aphanostoma_pulchra|SRR3105703_Diopisthoporus_gymnopharyngeus'  | tr ' ' '\n' > 077/${i}
    tr '\n' ' ' < $i | sed 's/\ >/\,>/g' | tr ',' '\n' | egrep '20_115_Childia_crassum|SRR2681679_Convolutriloba_macropyga|20_093_Haploposthia_rubropunctata|SRR3105703_Diopisthoporus_gymnopharyngeus'  | tr ' ' '\n' > 078/${i}
    tr '\n' ' ' < $i | sed 's/\ >/\,>/g' | tr ',' '\n' | egrep '20_115_Childia_crassum|SRR8617822_Neochildia_fusca|SRR6374833_Aphanostoma_pulchra|SRR3105703_Diopisthoporus_gymnopharyngeus'  | tr ' ' '\n' > 079/${i}
    tr '\n' ' ' < $i | sed 's/\ >/\,>/g' | tr ',' '\n' | egrep '20_115_Childia_crassum|SRR8617822_Neochildia_fusca|20_093_Haploposthia_rubropunctata|SRR3105703_Diopisthoporus_gymnopharyngeus'  | tr ' ' '\n' > 080/${i}
    tr '\n' ' ' < $i | sed 's/\ >/\,>/g' | tr ',' '\n' | egrep 'P15761_110_Childia_vivipara|DRR151142_Praesagittifera_naikaiensis|SRR6374833_Aphanostoma_pulchra|SRR3105703_Diopisthoporus_gymnopharyngeus'  | tr ' ' '\n' > 081/${i}
    tr '\n' ' ' < $i | sed 's/\ >/\,>/g' | tr ',' '\n' | egrep 'P15761_110_Childia_vivipara|DRR151142_Praesagittifera_naikaiensis|20_093_Haploposthia_rubropunctata|SRR3105703_Diopisthoporus_gymnopharyngeus'  | tr ' ' '\n' > 082/${i}
    tr '\n' ' ' < $i | sed 's/\ >/\,>/g' | tr ',' '\n' | egrep 'P15761_110_Childia_vivipara|P15761_125_Anaperus_rubellus|SRR6374833_Aphanostoma_pulchra|SRR3105703_Diopisthoporus_gymnopharyngeus'  | tr ' ' '\n' > 083/${i}
    tr '\n' ' ' < $i | sed 's/\ >/\,>/g' | tr ',' '\n' | egrep 'P15761_110_Childia_vivipara|P15761_125_Anaperus_rubellus|20_093_Haploposthia_rubropunctata|SRR3105703_Diopisthoporus_gymnopharyngeus'  | tr ' ' '\n' > 084/${i}
    tr '\n' ' ' < $i | sed 's/\ >/\,>/g' | tr ',' '\n' | egrep 'P15761_110_Childia_vivipara|P15761_141_Anaperus_tvaerminnensis|SRR6374833_Aphanostoma_pulchra|SRR3105703_Diopisthoporus_gymnopharyngeus'  | tr ' ' '\n' > 085/${i}
    tr '\n' ' ' < $i | sed 's/\ >/\,>/g' | tr ',' '\n' | egrep 'P15761_110_Childia_vivipara|P15761_141_Anaperus_tvaerminnensis|20_093_Haploposthia_rubropunctata|SRR3105703_Diopisthoporus_gymnopharyngeus'  | tr ' ' '\n' > 086/${i}
    tr '\n' ' ' < $i | sed 's/\ >/\,>/g' | tr ',' '\n' | egrep 'P15761_110_Childia_vivipara|SRR2681679_Convolutriloba_macropyga|SRR6374833_Aphanostoma_pulchra|SRR3105703_Diopisthoporus_gymnopharyngeus'  | tr ' ' '\n' > 087/${i}
    tr '\n' ' ' < $i | sed 's/\ >/\,>/g' | tr ',' '\n' | egrep 'P15761_110_Childia_vivipara|SRR2681679_Convolutriloba_macropyga|20_093_Haploposthia_rubropunctata|SRR3105703_Diopisthoporus_gymnopharyngeus'  | tr ' ' '\n' > 088/${i}
    tr '\n' ' ' < $i | sed 's/\ >/\,>/g' | tr ',' '\n' | egrep 'P15761_110_Childia_vivipara|SRR8617822_Neochildia_fusca|SRR6374833_Aphanostoma_pulchra|SRR3105703_Diopisthoporus_gymnopharyngeus'  | tr ' ' '\n' > 089/${i}
    tr '\n' ' ' < $i | sed 's/\ >/\,>/g' | tr ',' '\n' | egrep 'P15761_110_Childia_vivipara|SRR8617822_Neochildia_fusca|20_093_Haploposthia_rubropunctata|SRR3105703_Diopisthoporus_gymnopharyngeus'  | tr ' ' '\n' > 090/${i}
    tr '\n' ' ' < $i | sed 's/\ >/\,>/g' | tr ',' '\n' | egrep 'SRR3105702_Childia_submaculatum|DRR151142_Praesagittifera_naikaiensis|SRR6374833_Aphanostoma_pulchra|SRR3105703_Diopisthoporus_gymnopharyngeus'  | tr ' ' '\n' > 091/${i}
    tr '\n' ' ' < $i | sed 's/\ >/\,>/g' | tr ',' '\n' | egrep 'SRR3105702_Childia_submaculatum|DRR151142_Praesagittifera_naikaiensis|20_093_Haploposthia_rubropunctata|SRR3105703_Diopisthoporus_gymnopharyngeus'  | tr ' ' '\n' > 092/${i}
    tr '\n' ' ' < $i | sed 's/\ >/\,>/g' | tr ',' '\n' | egrep 'SRR3105702_Childia_submaculatum|P15761_125_Anaperus_rubellus|SRR6374833_Aphanostoma_pulchra|SRR3105703_Diopisthoporus_gymnopharyngeus'  | tr ' ' '\n' > 093/${i}
    tr '\n' ' ' < $i | sed 's/\ >/\,>/g' | tr ',' '\n' | egrep 'SRR3105702_Childia_submaculatum|P15761_125_Anaperus_rubellus|20_093_Haploposthia_rubropunctata|SRR3105703_Diopisthoporus_gymnopharyngeus'  | tr ' ' '\n' > 094/${i}
    tr '\n' ' ' < $i | sed 's/\ >/\,>/g' | tr ',' '\n' | egrep 'SRR3105702_Childia_submaculatum|P15761_141_Anaperus_tvaerminnensis|SRR6374833_Aphanostoma_pulchra|SRR3105703_Diopisthoporus_gymnopharyngeus'  | tr ' ' '\n' > 095/${i}
    tr '\n' ' ' < $i | sed 's/\ >/\,>/g' | tr ',' '\n' | egrep 'SRR3105702_Childia_submaculatum|P15761_141_Anaperus_tvaerminnensis|20_093_Haploposthia_rubropunctata|SRR3105703_Diopisthoporus_gymnopharyngeus'  | tr ' ' '\n' > 096/${i}
    tr '\n' ' ' < $i | sed 's/\ >/\,>/g' | tr ',' '\n' | egrep 'SRR3105702_Childia_submaculatum|SRR2681679_Convolutriloba_macropyga|SRR6374833_Aphanostoma_pulchra|SRR3105703_Diopisthoporus_gymnopharyngeus'  | tr ' ' '\n' > 097/${i}
    tr '\n' ' ' < $i | sed 's/\ >/\,>/g' | tr ',' '\n' | egrep 'SRR3105702_Childia_submaculatum|SRR2681679_Convolutriloba_macropyga|20_093_Haploposthia_rubropunctata|SRR3105703_Diopisthoporus_gymnopharyngeus'  | tr ' ' '\n' > 098/${i}
    tr '\n' ' ' < $i | sed 's/\ >/\,>/g' | tr ',' '\n' | egrep 'SRR3105702_Childia_submaculatum|SRR8617822_Neochildia_fusca|SRR6374833_Aphanostoma_pulchra|SRR3105703_Diopisthoporus_gymnopharyngeus'  | tr ' ' '\n' > 099/${i}
    tr '\n' ' ' < $i | sed 's/\ >/\,>/g' | tr ',' '\n' | egrep 'SRR3105702_Childia_submaculatum|SRR8617822_Neochildia_fusca|20_093_Haploposthia_rubropunctata|SRR3105703_Diopisthoporus_gymnopharyngeus'  | tr ' ' '\n' > 100/${i}
    tr '\n' ' ' < $i | sed 's/\ >/\,>/g' | tr ',' '\n' | egrep '20_005_Paramecynostomum_diversicolor|DRR151142_Praesagittifera_naikaiensis|SRR3105703_Diopisthoporus_gymnopharyngeus|SRR2681155_Meara_stichopi'  | tr ' ' '\n' > 101/${i}
    tr '\n' ' ' < $i | sed 's/\ >/\,>/g' | tr ',' '\n' | egrep '20_005_Paramecynostomum_diversicolor|P15761_125_Anaperus_rubellus|SRR3105703_Diopisthoporus_gymnopharyngeus|SRR2681155_Meara_stichopi'  | tr ' ' '\n' > 102/${i}
    tr '\n' ' ' < $i | sed 's/\ >/\,>/g' | tr ',' '\n' | egrep '20_005_Paramecynostomum_diversicolor|P15761_141_Anaperus_tvaerminnensis|SRR3105703_Diopisthoporus_gymnopharyngeus|SRR2681155_Meara_stichopi'  | tr ' ' '\n' > 103/${i}
    tr '\n' ' ' < $i | sed 's/\ >/\,>/g' | tr ',' '\n' | egrep '20_005_Paramecynostomum_diversicolor|SRR2681679_Convolutriloba_macropyga|SRR3105703_Diopisthoporus_gymnopharyngeus|SRR2681155_Meara_stichopi'  | tr ' ' '\n' > 104/${i}
    tr '\n' ' ' < $i | sed 's/\ >/\,>/g' | tr ',' '\n' | egrep '20_005_Paramecynostomum_diversicolor|SRR8617822_Neochildia_fusca|SRR3105703_Diopisthoporus_gymnopharyngeus|SRR2681155_Meara_stichopi'  | tr ' ' '\n' > 105/${i}
    tr '\n' ' ' < $i | sed 's/\ >/\,>/g' | tr ',' '\n' | egrep '20_082_Haploposthia_lactomaculata|DRR151142_Praesagittifera_naikaiensis|SRR3105703_Diopisthoporus_gymnopharyngeus|SRR2681155_Meara_stichopi'  | tr ' ' '\n' > 106/${i}
    tr '\n' ' ' < $i | sed 's/\ >/\,>/g' | tr ',' '\n' | egrep '20_082_Haploposthia_lactomaculata|P15761_125_Anaperus_rubellus|SRR3105703_Diopisthoporus_gymnopharyngeus|SRR2681155_Meara_stichopi'  | tr ' ' '\n' > 107/${i}
    tr '\n' ' ' < $i | sed 's/\ >/\,>/g' | tr ',' '\n' | egrep '20_082_Haploposthia_lactomaculata|P15761_141_Anaperus_tvaerminnensis|SRR3105703_Diopisthoporus_gymnopharyngeus|SRR2681155_Meara_stichopi'  | tr ' ' '\n' > 108/${i}
    tr '\n' ' ' < $i | sed 's/\ >/\,>/g' | tr ',' '\n' | egrep '20_082_Haploposthia_lactomaculata|SRR2681679_Convolutriloba_macropyga|SRR3105703_Diopisthoporus_gymnopharyngeus|SRR2681155_Meara_stichopi'  | tr ' ' '\n' > 109/${i}
    tr '\n' ' ' < $i | sed 's/\ >/\,>/g' | tr ',' '\n' | egrep '20_082_Haploposthia_lactomaculata|SRR8617822_Neochildia_fusca|SRR3105703_Diopisthoporus_gymnopharyngeus|SRR2681155_Meara_stichopi'  | tr ' ' '\n' > 110/${i}
    tr '\n' ' ' < $i | sed 's/\ >/\,>/g' | tr ',' '\n' | egrep '20_115_Childia_crassum|DRR151142_Praesagittifera_naikaiensis|SRR3105703_Diopisthoporus_gymnopharyngeus|SRR2681155_Meara_stichopi'  | tr ' ' '\n' > 111/${i}
    tr '\n' ' ' < $i | sed 's/\ >/\,>/g' | tr ',' '\n' | egrep '20_115_Childia_crassum|P15761_125_Anaperus_rubellus|SRR3105703_Diopisthoporus_gymnopharyngeus|SRR2681155_Meara_stichopi'  | tr ' ' '\n' > 112/${i}
    tr '\n' ' ' < $i | sed 's/\ >/\,>/g' | tr ',' '\n' | egrep '20_115_Childia_crassum|P15761_141_Anaperus_tvaerminnensis|SRR3105703_Diopisthoporus_gymnopharyngeus|SRR2681155_Meara_stichopi'  | tr ' ' '\n' > 113/${i}
    tr '\n' ' ' < $i | sed 's/\ >/\,>/g' | tr ',' '\n' | egrep '20_115_Childia_crassum|SRR2681679_Convolutriloba_macropyga|SRR3105703_Diopisthoporus_gymnopharyngeus|SRR2681155_Meara_stichopi'  | tr ' ' '\n' > 114/${i}
    tr '\n' ' ' < $i | sed 's/\ >/\,>/g' | tr ',' '\n' | egrep '20_115_Childia_crassum|SRR8617822_Neochildia_fusca|SRR3105703_Diopisthoporus_gymnopharyngeus|SRR2681155_Meara_stichopi'  | tr ' ' '\n' > 115/${i}
    tr '\n' ' ' < $i | sed 's/\ >/\,>/g' | tr ',' '\n' | egrep 'P15761_110_Childia_vivipara|DRR151142_Praesagittifera_naikaiensis|SRR3105703_Diopisthoporus_gymnopharyngeus|SRR2681155_Meara_stichopi'  | tr ' ' '\n' > 116/${i}
    tr '\n' ' ' < $i | sed 's/\ >/\,>/g' | tr ',' '\n' | egrep 'P15761_110_Childia_vivipara|P15761_125_Anaperus_rubellus|SRR3105703_Diopisthoporus_gymnopharyngeus|SRR2681155_Meara_stichopi'  | tr ' ' '\n' > 117/${i}
    tr '\n' ' ' < $i | sed 's/\ >/\,>/g' | tr ',' '\n' | egrep 'P15761_110_Childia_vivipara|P15761_141_Anaperus_tvaerminnensis|SRR3105703_Diopisthoporus_gymnopharyngeus|SRR2681155_Meara_stichopi'  | tr ' ' '\n' > 118/${i}
    tr '\n' ' ' < $i | sed 's/\ >/\,>/g' | tr ',' '\n' | egrep 'P15761_110_Childia_vivipara|SRR2681679_Convolutriloba_macropyga|SRR3105703_Diopisthoporus_gymnopharyngeus|SRR2681155_Meara_stichopi'  | tr ' ' '\n' > 119/${i}
    tr '\n' ' ' < $i | sed 's/\ >/\,>/g' | tr ',' '\n' | egrep 'P15761_110_Childia_vivipara|SRR8617822_Neochildia_fusca|SRR3105703_Diopisthoporus_gymnopharyngeus|SRR2681155_Meara_stichopi'  | tr ' ' '\n' > 120/${i}
    tr '\n' ' ' < $i | sed 's/\ >/\,>/g' | tr ',' '\n' | egrep 'SRR3105702_Childia_submaculatum|DRR151142_Praesagittifera_naikaiensis|SRR3105703_Diopisthoporus_gymnopharyngeus|SRR2681155_Meara_stichopi'  | tr ' ' '\n' > 121/${i}
    tr '\n' ' ' < $i | sed 's/\ >/\,>/g' | tr ',' '\n' | egrep 'SRR3105702_Childia_submaculatum|P15761_125_Anaperus_rubellus|SRR3105703_Diopisthoporus_gymnopharyngeus|SRR2681155_Meara_stichopi'  | tr ' ' '\n' > 122/${i}
    tr '\n' ' ' < $i | sed 's/\ >/\,>/g' | tr ',' '\n' | egrep 'SRR3105702_Childia_submaculatum|P15761_141_Anaperus_tvaerminnensis|SRR3105703_Diopisthoporus_gymnopharyngeus|SRR2681155_Meara_stichopi'  | tr ' ' '\n' > 123/${i}
    tr '\n' ' ' < $i | sed 's/\ >/\,>/g' | tr ',' '\n' | egrep 'SRR3105702_Childia_submaculatum|SRR2681679_Convolutriloba_macropyga|SRR3105703_Diopisthoporus_gymnopharyngeus|SRR2681155_Meara_stichopi'  | tr ' ' '\n' > 124/${i}
    tr '\n' ' ' < $i | sed 's/\ >/\,>/g' | tr ',' '\n' | egrep 'SRR3105702_Childia_submaculatum|SRR8617822_Neochildia_fusca|SRR3105703_Diopisthoporus_gymnopharyngeus|SRR2681155_Meara_stichopi'  | tr ' ' '\n' > 125/${i}
done

for i in */*fasta
    do
	seqs=$( grep -c '>' ${i} )
	if [ $seqs -lt 4 ]; then
	    rm ${i}
	fi
done

rm *fasta

cd 001/
for i in $( ls ../* | grep ':' | sed 's/\://g' )
    do
	cd $i
	mkdir Supermatrix Gene_trees
	
	for gene in *fasta
	    do
		mafft-linsi ${gene} > Supermatrix/${gene}.fas
		cp Supermatrix/${gene}.fas Gene_trees/
    done
	
	cd Supermatrix/
	perl /home/saabalde/Escritorio/software/FASconCAT-G/FASconCAT-G_v1.05.pl -l -s > FASconCat.log
	rm *fasta.fas

    cd ../	
done

## Make genetrees just in case we need them for other analyses
cd ../
for i in */Gene_trees/*fas
    do
	iqtree -s $i -m MFP -AICc -nt AUTO -bb 1000
	rm $i
done

## Now that we have all supermatrices, we can put them all together in the same directory

for i in $( ls * | grep ':' | sed 's/\://g' )
    do
	cp ${i}/Supermatrix/FcC_supermatrix.fas ./FcC_supermatrix.${i}.fas
done

## Now we are ready to analyse all these matrices to find signatures of introgression. I will use the "D-statistic.R" script again. However,
## I need to modify these matrices to sort the sequences: Mecynostomidae, Convolutidae, Dakuidae, Outgroup.

############################################################################################################################################
############################################################################################################################################
